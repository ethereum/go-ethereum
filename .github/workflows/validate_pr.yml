name: PR Format Validation

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Title Format
        uses: actions/github-script@v7
        with:
          script: |
            const prTitle = context.payload.pull_request.title;
            const titleRegex = /^(\.?[\w\s,{}/]+): .+/;
            
            if (!titleRegex.test(prTitle)) {
              core.setFailed(`PR title "${prTitle}" does not match required format: directory, ...: description`);
              return;
            }
            
            console.log('✅ PR title format is valid');

      # - name: Check Milestone Assignment
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       // Fetch the PR data explicitly to ensure we have milestone info
      #       const { data: pr } = await github.rest.pulls.get({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: context.payload.pull_request.number
      #       });
            
      #       if (!pr.milestone) {
      #         core.setFailed('PR must have a milestone assigned');
      #         return;
      #       }
            
      #       console.log(`✅ Milestone "${pr.milestone.title}" is assigned`);
