name: Hardhat Deploy and Test

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

on:
  pull_request:
    branches:
      - master
    types:
      - labeled
 

jobs:
  deploy_hardhat_project:
    if: ${{ github.event.label.name == 'CI:Deploy'}}
    name: Build And Push GETH Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN}}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.9.0
    
      - name: Run geth devnet
        run: docker run --name go-ethereum -p 8545:8545 -p 30303:30303 -d anglyuboslav/geth --dev --http --http.addr 0.0.0.0

      - name: Install dependencies
        run: | 
            cd hardhat
            npm install -y
            npm install --save-dev hardhat -y
            npm install --save-dev @nomicfoundation/hardhat-toolbox -y                

      - name: Deploy Hardhat project
        run: |
            cd hardhat
            npx hardhat run scripts/deploy.js --network localhost

      - name: Run tests
        run: |
          cd hardhat
          npx hardhat test --network localhost
          
      - name: Create devnet geth image and push to Dockerhub
        run: |
            ./create_image.sh
            docker push anglyuboslav/geth-smart-con
  deploy_k8s_and_app:
    if: ${{ github.event.label.name == 'CI:Deploy'}}
    name: Deploy K8S Cluster in AWS and deploy GETH DEVENV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install kubectl

        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.27.0' 

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE}}
          role-session-name: K8sBuildSession
          aws-region: us-east-1
      - name: Test AWS access
        run: aws sts get-caller-identity
    
