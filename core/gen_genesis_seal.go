// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package core

import (
	"encoding/json"

	"github.com/ethereum/go-ethereum/common/hexutil"
)

var _ = (*genesisSealMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (s Seal) MarshalJSON() ([]byte, error) {
	type Seal struct {
		Step      hexutil.Bytes `json:"step,omitempty"`
		Signature hexutil.Bytes `json:"signature,omitempty"`
	}
	var enc Seal
	enc.Step = s.Step
	enc.Signature = s.Signature
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (s *Seal) UnmarshalJSON(input []byte) error {
	type Seal struct {
		Step      *hexutil.Bytes `json:"step,omitempty"`
		Signature *hexutil.Bytes `json:"signature,omitempty"`
	}
	var dec Seal
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Step != nil {
		s.Step = *dec.Step
	}
	if dec.Signature != nil {
		s.Signature = *dec.Signature
	}
	return nil
}
