# Support setting various labels on the final image
ARG COMMIT=""
ARG VERSION=""
ARG BUILDNUM=""

# Build Geth in a stock Go builder container
FROM golang:1.24-alpine AS builder

# These build arguments need to be redeclared in the builder stage
ARG COMMIT
ARG VERSION
ARG BUILDNUM

RUN apk add --no-cache gcc musl-dev linux-headers git

# Get dependencies - will also be cached if we won't change go.mod/go.sum
COPY go.mod /bera-geth/
COPY go.sum /bera-geth/
RUN cd /bera-geth && go mod download

ADD . /bera-geth

# This is not strictly necessary, but it matches the "Dockerfile" steps, thus
# makes it so that under certain circumstances, the docker layer can be cached,
# and the builder can jump to the next (build all) command, with the go cache fully loaded.
#
# Pass git information to the build process when provided
RUN cd /bera-geth && \
    if [ -n "$VERSION" ]; then \
        go run build/ci.go install -static -git-tag="$VERSION" -git-commit="$COMMIT" ./cmd/bera-geth; \
    else \
        go run build/ci.go install -static ./cmd/bera-geth; \
    fi

RUN cd /bera-geth && \
    if [ -n "$VERSION" ]; then \
        go run build/ci.go install -static -git-tag="$VERSION" -git-commit="$COMMIT"; \
    else \
        go run build/ci.go install -static; \
    fi

# Pull all binaries into a second stage deploy alpine container
FROM alpine:latest

RUN apk add --no-cache ca-certificates
COPY --from=builder /bera-geth/build/bin/* /usr/local/bin/

EXPOSE 8545 8546 30303 30303/udp

# Add some metadata labels to help programmatic image consumption
ARG COMMIT=""
ARG VERSION=""
ARG BUILDNUM=""

LABEL commit="$COMMIT" version="$VERSION" buildnum="$BUILDNUM"
