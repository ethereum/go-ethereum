// This file originates from the SatoshiLabs Trezor `common` repository at:
//   https://github.com/trezor/trezor-common/blob/master/protob/messages.proto
// dated 30.06.2025, commit 421b45d4677f2499234692b0f54010bc45b3ae5f.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: messages.proto

package trezor

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Mapping between Trezor wire identifier (uint) and a protobuf message
type MessageType int32

const (
	// Management
	MessageType_MessageType_Initialize           MessageType = 0
	MessageType_MessageType_Ping                 MessageType = 1
	MessageType_MessageType_Success              MessageType = 2
	MessageType_MessageType_Failure              MessageType = 3
	MessageType_MessageType_ChangePin            MessageType = 4
	MessageType_MessageType_WipeDevice           MessageType = 5
	MessageType_MessageType_GetEntropy           MessageType = 9
	MessageType_MessageType_Entropy              MessageType = 10
	MessageType_MessageType_LoadDevice           MessageType = 13
	MessageType_MessageType_ResetDevice          MessageType = 14
	MessageType_MessageType_SetBusy              MessageType = 16
	MessageType_MessageType_Features             MessageType = 17
	MessageType_MessageType_PinMatrixRequest     MessageType = 18
	MessageType_MessageType_PinMatrixAck         MessageType = 19
	MessageType_MessageType_Cancel               MessageType = 20
	MessageType_MessageType_LockDevice           MessageType = 24
	MessageType_MessageType_ApplySettings        MessageType = 25
	MessageType_MessageType_ButtonRequest        MessageType = 26
	MessageType_MessageType_ButtonAck            MessageType = 27
	MessageType_MessageType_ApplyFlags           MessageType = 28
	MessageType_MessageType_GetNonce             MessageType = 31
	MessageType_MessageType_Nonce                MessageType = 33
	MessageType_MessageType_BackupDevice         MessageType = 34
	MessageType_MessageType_EntropyRequest       MessageType = 35
	MessageType_MessageType_EntropyAck           MessageType = 36
	MessageType_MessageType_EntropyCheckReady    MessageType = 994
	MessageType_MessageType_EntropyCheckContinue MessageType = 995
	MessageType_MessageType_PassphraseRequest    MessageType = 41
	MessageType_MessageType_PassphraseAck        MessageType = 42
	MessageType_MessageType_RecoveryDevice       MessageType = 45
	MessageType_MessageType_WordRequest          MessageType = 46
	MessageType_MessageType_WordAck              MessageType = 47
	MessageType_MessageType_GetFeatures          MessageType = 55
	MessageType_MessageType_SdProtect            MessageType = 79
	MessageType_MessageType_ChangeWipeCode       MessageType = 82
	MessageType_MessageType_EndSession           MessageType = 83
	MessageType_MessageType_DoPreauthorized      MessageType = 84
	MessageType_MessageType_PreauthorizedRequest MessageType = 85
	MessageType_MessageType_CancelAuthorization  MessageType = 86
	MessageType_MessageType_RebootToBootloader   MessageType = 87
	MessageType_MessageType_GetFirmwareHash      MessageType = 88
	MessageType_MessageType_FirmwareHash         MessageType = 89
	MessageType_MessageType_UnlockPath           MessageType = 93
	MessageType_MessageType_UnlockedPathRequest  MessageType = 94
	MessageType_MessageType_ShowDeviceTutorial   MessageType = 95
	MessageType_MessageType_UnlockBootloader     MessageType = 96
	MessageType_MessageType_AuthenticateDevice   MessageType = 97
	MessageType_MessageType_AuthenticityProof    MessageType = 98
	MessageType_MessageType_ChangeLanguage       MessageType = 990
	MessageType_MessageType_DataChunkRequest     MessageType = 991
	MessageType_MessageType_DataChunkAck         MessageType = 992
	MessageType_MessageType_SetBrightness        MessageType = 993
	MessageType_MessageType_SetU2FCounter        MessageType = 63
	MessageType_MessageType_GetNextU2FCounter    MessageType = 80
	MessageType_MessageType_NextU2FCounter       MessageType = 81
	// Deprecated messages, kept for protobuf compatibility.
	//
	// Deprecated: Marked as deprecated in messages.proto.
	MessageType_MessageType_Deprecated_PassphraseStateRequest MessageType = 77
	// Deprecated: Marked as deprecated in messages.proto.
	MessageType_MessageType_Deprecated_PassphraseStateAck MessageType = 78
	// Bootloader
	MessageType_MessageType_FirmwareErase   MessageType = 6
	MessageType_MessageType_FirmwareUpload  MessageType = 7
	MessageType_MessageType_FirmwareRequest MessageType = 8
	MessageType_MessageType_ProdTestT1      MessageType = 32
	// BLE
	MessageType_MessageType_BleUnpair MessageType = 8001
	// Bitcoin
	MessageType_MessageType_GetPublicKey        MessageType = 11
	MessageType_MessageType_PublicKey           MessageType = 12
	MessageType_MessageType_SignTx              MessageType = 15
	MessageType_MessageType_TxRequest           MessageType = 21
	MessageType_MessageType_TxAck               MessageType = 22
	MessageType_MessageType_GetAddress          MessageType = 29
	MessageType_MessageType_Address             MessageType = 30
	MessageType_MessageType_TxAckPaymentRequest MessageType = 37
	MessageType_MessageType_SignMessage         MessageType = 38
	MessageType_MessageType_VerifyMessage       MessageType = 39
	MessageType_MessageType_MessageSignature    MessageType = 40
	MessageType_MessageType_GetOwnershipId      MessageType = 43
	MessageType_MessageType_OwnershipId         MessageType = 44
	MessageType_MessageType_GetOwnershipProof   MessageType = 49
	MessageType_MessageType_OwnershipProof      MessageType = 50
	MessageType_MessageType_AuthorizeCoinJoin   MessageType = 51
	// Crypto
	MessageType_MessageType_CipherKeyValue    MessageType = 23
	MessageType_MessageType_CipheredKeyValue  MessageType = 48
	MessageType_MessageType_SignIdentity      MessageType = 53
	MessageType_MessageType_SignedIdentity    MessageType = 54
	MessageType_MessageType_GetECDHSessionKey MessageType = 61
	MessageType_MessageType_ECDHSessionKey    MessageType = 62
	// Debug
	MessageType_MessageType_DebugLinkDecision         MessageType = 100
	MessageType_MessageType_DebugLinkGetState         MessageType = 101
	MessageType_MessageType_DebugLinkState            MessageType = 102
	MessageType_MessageType_DebugLinkStop             MessageType = 103
	MessageType_MessageType_DebugLinkLog              MessageType = 104
	MessageType_MessageType_DebugLinkMemoryRead       MessageType = 110
	MessageType_MessageType_DebugLinkMemory           MessageType = 111
	MessageType_MessageType_DebugLinkMemoryWrite      MessageType = 112
	MessageType_MessageType_DebugLinkFlashErase       MessageType = 113
	MessageType_MessageType_DebugLinkLayout           MessageType = 9001
	MessageType_MessageType_DebugLinkReseedRandom     MessageType = 9002
	MessageType_MessageType_DebugLinkRecordScreen     MessageType = 9003
	MessageType_MessageType_DebugLinkEraseSdCard      MessageType = 9005
	MessageType_MessageType_DebugLinkWatchLayout      MessageType = 9006
	MessageType_MessageType_DebugLinkResetDebugEvents MessageType = 9007
	MessageType_MessageType_DebugLinkOptigaSetSecMax  MessageType = 9008
	MessageType_MessageType_DebugLinkGetGcInfo        MessageType = 9009
	MessageType_MessageType_DebugLinkGcInfo           MessageType = 9010
	MessageType_MessageType_DebugLinkGetPairingInfo   MessageType = 9011
	MessageType_MessageType_DebugLinkPairingInfo      MessageType = 9012
	// Ethereum
	MessageType_MessageType_EthereumGetPublicKey           MessageType = 450
	MessageType_MessageType_EthereumPublicKey              MessageType = 451
	MessageType_MessageType_EthereumGetAddress             MessageType = 56
	MessageType_MessageType_EthereumAddress                MessageType = 57
	MessageType_MessageType_EthereumSignTx                 MessageType = 58
	MessageType_MessageType_EthereumSignTxEIP1559          MessageType = 452
	MessageType_MessageType_EthereumTxRequest              MessageType = 59
	MessageType_MessageType_EthereumTxAck                  MessageType = 60
	MessageType_MessageType_EthereumSignMessage            MessageType = 64
	MessageType_MessageType_EthereumVerifyMessage          MessageType = 65
	MessageType_MessageType_EthereumMessageSignature       MessageType = 66
	MessageType_MessageType_EthereumSignTypedData          MessageType = 464
	MessageType_MessageType_EthereumTypedDataStructRequest MessageType = 465
	MessageType_MessageType_EthereumTypedDataStructAck     MessageType = 466
	MessageType_MessageType_EthereumTypedDataValueRequest  MessageType = 467
	MessageType_MessageType_EthereumTypedDataValueAck      MessageType = 468
	MessageType_MessageType_EthereumTypedDataSignature     MessageType = 469
	MessageType_MessageType_EthereumSignTypedHash          MessageType = 470
	// NEM
	MessageType_MessageType_NEMGetAddress       MessageType = 67
	MessageType_MessageType_NEMAddress          MessageType = 68
	MessageType_MessageType_NEMSignTx           MessageType = 69
	MessageType_MessageType_NEMSignedTx         MessageType = 70
	MessageType_MessageType_NEMDecryptMessage   MessageType = 75
	MessageType_MessageType_NEMDecryptedMessage MessageType = 76
	// Tezos
	MessageType_MessageType_TezosGetAddress   MessageType = 150
	MessageType_MessageType_TezosAddress      MessageType = 151
	MessageType_MessageType_TezosSignTx       MessageType = 152
	MessageType_MessageType_TezosSignedTx     MessageType = 153
	MessageType_MessageType_TezosGetPublicKey MessageType = 154
	MessageType_MessageType_TezosPublicKey    MessageType = 155
	// Stellar
	MessageType_MessageType_StellarSignTx                     MessageType = 202
	MessageType_MessageType_StellarTxOpRequest                MessageType = 203
	MessageType_MessageType_StellarGetAddress                 MessageType = 207
	MessageType_MessageType_StellarAddress                    MessageType = 208
	MessageType_MessageType_StellarCreateAccountOp            MessageType = 210
	MessageType_MessageType_StellarPaymentOp                  MessageType = 211
	MessageType_MessageType_StellarPathPaymentStrictReceiveOp MessageType = 212
	MessageType_MessageType_StellarManageSellOfferOp          MessageType = 213
	MessageType_MessageType_StellarCreatePassiveSellOfferOp   MessageType = 214
	MessageType_MessageType_StellarSetOptionsOp               MessageType = 215
	MessageType_MessageType_StellarChangeTrustOp              MessageType = 216
	MessageType_MessageType_StellarAllowTrustOp               MessageType = 217
	MessageType_MessageType_StellarAccountMergeOp             MessageType = 218
	MessageType_MessageType_StellarManageDataOp               MessageType = 220
	MessageType_MessageType_StellarBumpSequenceOp             MessageType = 221
	MessageType_MessageType_StellarManageBuyOfferOp           MessageType = 222
	MessageType_MessageType_StellarPathPaymentStrictSendOp    MessageType = 223
	MessageType_MessageType_StellarClaimClaimableBalanceOp    MessageType = 225
	MessageType_MessageType_StellarSignedTx                   MessageType = 230
	MessageType_MessageType_CardanoGetPublicKey               MessageType = 305
	MessageType_MessageType_CardanoPublicKey                  MessageType = 306
	MessageType_MessageType_CardanoGetAddress                 MessageType = 307
	MessageType_MessageType_CardanoAddress                    MessageType = 308
	MessageType_MessageType_CardanoTxItemAck                  MessageType = 313
	MessageType_MessageType_CardanoTxAuxiliaryDataSupplement  MessageType = 314
	MessageType_MessageType_CardanoTxWitnessRequest           MessageType = 315
	MessageType_MessageType_CardanoTxWitnessResponse          MessageType = 316
	MessageType_MessageType_CardanoTxHostAck                  MessageType = 317
	MessageType_MessageType_CardanoTxBodyHash                 MessageType = 318
	MessageType_MessageType_CardanoSignTxFinished             MessageType = 319
	MessageType_MessageType_CardanoSignTxInit                 MessageType = 320
	MessageType_MessageType_CardanoTxInput                    MessageType = 321
	MessageType_MessageType_CardanoTxOutput                   MessageType = 322
	MessageType_MessageType_CardanoAssetGroup                 MessageType = 323
	MessageType_MessageType_CardanoToken                      MessageType = 324
	MessageType_MessageType_CardanoTxCertificate              MessageType = 325
	MessageType_MessageType_CardanoTxWithdrawal               MessageType = 326
	MessageType_MessageType_CardanoTxAuxiliaryData            MessageType = 327
	MessageType_MessageType_CardanoPoolOwner                  MessageType = 328
	MessageType_MessageType_CardanoPoolRelayParameters        MessageType = 329
	MessageType_MessageType_CardanoGetNativeScriptHash        MessageType = 330
	MessageType_MessageType_CardanoNativeScriptHash           MessageType = 331
	MessageType_MessageType_CardanoTxMint                     MessageType = 332
	MessageType_MessageType_CardanoTxCollateralInput          MessageType = 333
	MessageType_MessageType_CardanoTxRequiredSigner           MessageType = 334
	MessageType_MessageType_CardanoTxInlineDatumChunk         MessageType = 335
	MessageType_MessageType_CardanoTxReferenceScriptChunk     MessageType = 336
	MessageType_MessageType_CardanoTxReferenceInput           MessageType = 337
	// Ripple
	MessageType_MessageType_RippleGetAddress MessageType = 400
	MessageType_MessageType_RippleAddress    MessageType = 401
	MessageType_MessageType_RippleSignTx     MessageType = 402
	MessageType_MessageType_RippleSignedTx   MessageType = 403
	// Monero
	MessageType_MessageType_MoneroTransactionInitRequest         MessageType = 501
	MessageType_MessageType_MoneroTransactionInitAck             MessageType = 502
	MessageType_MessageType_MoneroTransactionSetInputRequest     MessageType = 503
	MessageType_MessageType_MoneroTransactionSetInputAck         MessageType = 504
	MessageType_MessageType_MoneroTransactionInputViniRequest    MessageType = 507
	MessageType_MessageType_MoneroTransactionInputViniAck        MessageType = 508
	MessageType_MessageType_MoneroTransactionAllInputsSetRequest MessageType = 509
	MessageType_MessageType_MoneroTransactionAllInputsSetAck     MessageType = 510
	MessageType_MessageType_MoneroTransactionSetOutputRequest    MessageType = 511
	MessageType_MessageType_MoneroTransactionSetOutputAck        MessageType = 512
	MessageType_MessageType_MoneroTransactionAllOutSetRequest    MessageType = 513
	MessageType_MessageType_MoneroTransactionAllOutSetAck        MessageType = 514
	MessageType_MessageType_MoneroTransactionSignInputRequest    MessageType = 515
	MessageType_MessageType_MoneroTransactionSignInputAck        MessageType = 516
	MessageType_MessageType_MoneroTransactionFinalRequest        MessageType = 517
	MessageType_MessageType_MoneroTransactionFinalAck            MessageType = 518
	MessageType_MessageType_MoneroKeyImageExportInitRequest      MessageType = 530
	MessageType_MessageType_MoneroKeyImageExportInitAck          MessageType = 531
	MessageType_MessageType_MoneroKeyImageSyncStepRequest        MessageType = 532
	MessageType_MessageType_MoneroKeyImageSyncStepAck            MessageType = 533
	MessageType_MessageType_MoneroKeyImageSyncFinalRequest       MessageType = 534
	MessageType_MessageType_MoneroKeyImageSyncFinalAck           MessageType = 535
	MessageType_MessageType_MoneroGetAddress                     MessageType = 540
	MessageType_MessageType_MoneroAddress                        MessageType = 541
	MessageType_MessageType_MoneroGetWatchKey                    MessageType = 542
	MessageType_MessageType_MoneroWatchKey                       MessageType = 543
	MessageType_MessageType_DebugMoneroDiagRequest               MessageType = 546
	MessageType_MessageType_DebugMoneroDiagAck                   MessageType = 547
	MessageType_MessageType_MoneroGetTxKeyRequest                MessageType = 550
	MessageType_MessageType_MoneroGetTxKeyAck                    MessageType = 551
	MessageType_MessageType_MoneroLiveRefreshStartRequest        MessageType = 552
	MessageType_MessageType_MoneroLiveRefreshStartAck            MessageType = 553
	MessageType_MessageType_MoneroLiveRefreshStepRequest         MessageType = 554
	MessageType_MessageType_MoneroLiveRefreshStepAck             MessageType = 555
	MessageType_MessageType_MoneroLiveRefreshFinalRequest        MessageType = 556
	MessageType_MessageType_MoneroLiveRefreshFinalAck            MessageType = 557
	// EOS
	MessageType_MessageType_EosGetPublicKey    MessageType = 600
	MessageType_MessageType_EosPublicKey       MessageType = 601
	MessageType_MessageType_EosSignTx          MessageType = 602
	MessageType_MessageType_EosTxActionRequest MessageType = 603
	MessageType_MessageType_EosTxActionAck     MessageType = 604
	MessageType_MessageType_EosSignedTx        MessageType = 605
	// WebAuthn
	MessageType_MessageType_WebAuthnListResidentCredentials  MessageType = 800
	MessageType_MessageType_WebAuthnCredentials              MessageType = 801
	MessageType_MessageType_WebAuthnAddResidentCredential    MessageType = 802
	MessageType_MessageType_WebAuthnRemoveResidentCredential MessageType = 803
	// Solana
	MessageType_MessageType_SolanaGetPublicKey MessageType = 900
	MessageType_MessageType_SolanaPublicKey    MessageType = 901
	MessageType_MessageType_SolanaGetAddress   MessageType = 902
	MessageType_MessageType_SolanaAddress      MessageType = 903
	MessageType_MessageType_SolanaSignTx       MessageType = 904
	MessageType_MessageType_SolanaTxSignature  MessageType = 905
	// THP
	MessageType_MessageType_ThpCreateNewSession            MessageType = 1000
	MessageType_MessageType_ThpPairingRequest              MessageType = 1006
	MessageType_MessageType_ThpPairingRequestApproved      MessageType = 1007
	MessageType_MessageType_ThpSelectMethod                MessageType = 1008
	MessageType_MessageType_ThpPairingPreparationsFinished MessageType = 1009
	MessageType_MessageType_ThpCredentialRequest           MessageType = 1010
	MessageType_MessageType_ThpCredentialResponse          MessageType = 1011
	MessageType_MessageType_ThpEndRequest                  MessageType = 1012
	MessageType_MessageType_ThpEndResponse                 MessageType = 1013
	MessageType_MessageType_ThpCodeEntryCommitment         MessageType = 1016
	MessageType_MessageType_ThpCodeEntryChallenge          MessageType = 1017
	MessageType_MessageType_ThpCodeEntryCpaceTrezor        MessageType = 1018
	MessageType_MessageType_ThpCodeEntryCpaceHostTag       MessageType = 1019
	MessageType_MessageType_ThpCodeEntrySecret             MessageType = 1020
	MessageType_MessageType_ThpQrCodeTag                   MessageType = 1024
	MessageType_MessageType_ThpQrCodeSecret                MessageType = 1025
	MessageType_MessageType_ThpNfcTagHost                  MessageType = 1032
	MessageType_MessageType_ThpNfcTagTrezor                MessageType = 1033
	// Nostr
	MessageType_MessageType_NostrGetPubkey      MessageType = 2001
	MessageType_MessageType_NostrPubkey         MessageType = 2002
	MessageType_MessageType_NostrSignEvent      MessageType = 2003
	MessageType_MessageType_NostrEventSignature MessageType = 2004
	// Benchmark
	MessageType_MessageType_BenchmarkListNames MessageType = 9100
	MessageType_MessageType_BenchmarkNames     MessageType = 9101
	MessageType_MessageType_BenchmarkRun       MessageType = 9102
	MessageType_MessageType_BenchmarkResult    MessageType = 9103
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:    "MessageType_Initialize",
		1:    "MessageType_Ping",
		2:    "MessageType_Success",
		3:    "MessageType_Failure",
		4:    "MessageType_ChangePin",
		5:    "MessageType_WipeDevice",
		9:    "MessageType_GetEntropy",
		10:   "MessageType_Entropy",
		13:   "MessageType_LoadDevice",
		14:   "MessageType_ResetDevice",
		16:   "MessageType_SetBusy",
		17:   "MessageType_Features",
		18:   "MessageType_PinMatrixRequest",
		19:   "MessageType_PinMatrixAck",
		20:   "MessageType_Cancel",
		24:   "MessageType_LockDevice",
		25:   "MessageType_ApplySettings",
		26:   "MessageType_ButtonRequest",
		27:   "MessageType_ButtonAck",
		28:   "MessageType_ApplyFlags",
		31:   "MessageType_GetNonce",
		33:   "MessageType_Nonce",
		34:   "MessageType_BackupDevice",
		35:   "MessageType_EntropyRequest",
		36:   "MessageType_EntropyAck",
		994:  "MessageType_EntropyCheckReady",
		995:  "MessageType_EntropyCheckContinue",
		41:   "MessageType_PassphraseRequest",
		42:   "MessageType_PassphraseAck",
		45:   "MessageType_RecoveryDevice",
		46:   "MessageType_WordRequest",
		47:   "MessageType_WordAck",
		55:   "MessageType_GetFeatures",
		79:   "MessageType_SdProtect",
		82:   "MessageType_ChangeWipeCode",
		83:   "MessageType_EndSession",
		84:   "MessageType_DoPreauthorized",
		85:   "MessageType_PreauthorizedRequest",
		86:   "MessageType_CancelAuthorization",
		87:   "MessageType_RebootToBootloader",
		88:   "MessageType_GetFirmwareHash",
		89:   "MessageType_FirmwareHash",
		93:   "MessageType_UnlockPath",
		94:   "MessageType_UnlockedPathRequest",
		95:   "MessageType_ShowDeviceTutorial",
		96:   "MessageType_UnlockBootloader",
		97:   "MessageType_AuthenticateDevice",
		98:   "MessageType_AuthenticityProof",
		990:  "MessageType_ChangeLanguage",
		991:  "MessageType_DataChunkRequest",
		992:  "MessageType_DataChunkAck",
		993:  "MessageType_SetBrightness",
		63:   "MessageType_SetU2FCounter",
		80:   "MessageType_GetNextU2FCounter",
		81:   "MessageType_NextU2FCounter",
		77:   "MessageType_Deprecated_PassphraseStateRequest",
		78:   "MessageType_Deprecated_PassphraseStateAck",
		6:    "MessageType_FirmwareErase",
		7:    "MessageType_FirmwareUpload",
		8:    "MessageType_FirmwareRequest",
		32:   "MessageType_ProdTestT1",
		8001: "MessageType_BleUnpair",
		11:   "MessageType_GetPublicKey",
		12:   "MessageType_PublicKey",
		15:   "MessageType_SignTx",
		21:   "MessageType_TxRequest",
		22:   "MessageType_TxAck",
		29:   "MessageType_GetAddress",
		30:   "MessageType_Address",
		37:   "MessageType_TxAckPaymentRequest",
		38:   "MessageType_SignMessage",
		39:   "MessageType_VerifyMessage",
		40:   "MessageType_MessageSignature",
		43:   "MessageType_GetOwnershipId",
		44:   "MessageType_OwnershipId",
		49:   "MessageType_GetOwnershipProof",
		50:   "MessageType_OwnershipProof",
		51:   "MessageType_AuthorizeCoinJoin",
		23:   "MessageType_CipherKeyValue",
		48:   "MessageType_CipheredKeyValue",
		53:   "MessageType_SignIdentity",
		54:   "MessageType_SignedIdentity",
		61:   "MessageType_GetECDHSessionKey",
		62:   "MessageType_ECDHSessionKey",
		100:  "MessageType_DebugLinkDecision",
		101:  "MessageType_DebugLinkGetState",
		102:  "MessageType_DebugLinkState",
		103:  "MessageType_DebugLinkStop",
		104:  "MessageType_DebugLinkLog",
		110:  "MessageType_DebugLinkMemoryRead",
		111:  "MessageType_DebugLinkMemory",
		112:  "MessageType_DebugLinkMemoryWrite",
		113:  "MessageType_DebugLinkFlashErase",
		9001: "MessageType_DebugLinkLayout",
		9002: "MessageType_DebugLinkReseedRandom",
		9003: "MessageType_DebugLinkRecordScreen",
		9005: "MessageType_DebugLinkEraseSdCard",
		9006: "MessageType_DebugLinkWatchLayout",
		9007: "MessageType_DebugLinkResetDebugEvents",
		9008: "MessageType_DebugLinkOptigaSetSecMax",
		9009: "MessageType_DebugLinkGetGcInfo",
		9010: "MessageType_DebugLinkGcInfo",
		9011: "MessageType_DebugLinkGetPairingInfo",
		9012: "MessageType_DebugLinkPairingInfo",
		450:  "MessageType_EthereumGetPublicKey",
		451:  "MessageType_EthereumPublicKey",
		56:   "MessageType_EthereumGetAddress",
		57:   "MessageType_EthereumAddress",
		58:   "MessageType_EthereumSignTx",
		452:  "MessageType_EthereumSignTxEIP1559",
		59:   "MessageType_EthereumTxRequest",
		60:   "MessageType_EthereumTxAck",
		64:   "MessageType_EthereumSignMessage",
		65:   "MessageType_EthereumVerifyMessage",
		66:   "MessageType_EthereumMessageSignature",
		464:  "MessageType_EthereumSignTypedData",
		465:  "MessageType_EthereumTypedDataStructRequest",
		466:  "MessageType_EthereumTypedDataStructAck",
		467:  "MessageType_EthereumTypedDataValueRequest",
		468:  "MessageType_EthereumTypedDataValueAck",
		469:  "MessageType_EthereumTypedDataSignature",
		470:  "MessageType_EthereumSignTypedHash",
		67:   "MessageType_NEMGetAddress",
		68:   "MessageType_NEMAddress",
		69:   "MessageType_NEMSignTx",
		70:   "MessageType_NEMSignedTx",
		75:   "MessageType_NEMDecryptMessage",
		76:   "MessageType_NEMDecryptedMessage",
		150:  "MessageType_TezosGetAddress",
		151:  "MessageType_TezosAddress",
		152:  "MessageType_TezosSignTx",
		153:  "MessageType_TezosSignedTx",
		154:  "MessageType_TezosGetPublicKey",
		155:  "MessageType_TezosPublicKey",
		202:  "MessageType_StellarSignTx",
		203:  "MessageType_StellarTxOpRequest",
		207:  "MessageType_StellarGetAddress",
		208:  "MessageType_StellarAddress",
		210:  "MessageType_StellarCreateAccountOp",
		211:  "MessageType_StellarPaymentOp",
		212:  "MessageType_StellarPathPaymentStrictReceiveOp",
		213:  "MessageType_StellarManageSellOfferOp",
		214:  "MessageType_StellarCreatePassiveSellOfferOp",
		215:  "MessageType_StellarSetOptionsOp",
		216:  "MessageType_StellarChangeTrustOp",
		217:  "MessageType_StellarAllowTrustOp",
		218:  "MessageType_StellarAccountMergeOp",
		220:  "MessageType_StellarManageDataOp",
		221:  "MessageType_StellarBumpSequenceOp",
		222:  "MessageType_StellarManageBuyOfferOp",
		223:  "MessageType_StellarPathPaymentStrictSendOp",
		225:  "MessageType_StellarClaimClaimableBalanceOp",
		230:  "MessageType_StellarSignedTx",
		305:  "MessageType_CardanoGetPublicKey",
		306:  "MessageType_CardanoPublicKey",
		307:  "MessageType_CardanoGetAddress",
		308:  "MessageType_CardanoAddress",
		313:  "MessageType_CardanoTxItemAck",
		314:  "MessageType_CardanoTxAuxiliaryDataSupplement",
		315:  "MessageType_CardanoTxWitnessRequest",
		316:  "MessageType_CardanoTxWitnessResponse",
		317:  "MessageType_CardanoTxHostAck",
		318:  "MessageType_CardanoTxBodyHash",
		319:  "MessageType_CardanoSignTxFinished",
		320:  "MessageType_CardanoSignTxInit",
		321:  "MessageType_CardanoTxInput",
		322:  "MessageType_CardanoTxOutput",
		323:  "MessageType_CardanoAssetGroup",
		324:  "MessageType_CardanoToken",
		325:  "MessageType_CardanoTxCertificate",
		326:  "MessageType_CardanoTxWithdrawal",
		327:  "MessageType_CardanoTxAuxiliaryData",
		328:  "MessageType_CardanoPoolOwner",
		329:  "MessageType_CardanoPoolRelayParameters",
		330:  "MessageType_CardanoGetNativeScriptHash",
		331:  "MessageType_CardanoNativeScriptHash",
		332:  "MessageType_CardanoTxMint",
		333:  "MessageType_CardanoTxCollateralInput",
		334:  "MessageType_CardanoTxRequiredSigner",
		335:  "MessageType_CardanoTxInlineDatumChunk",
		336:  "MessageType_CardanoTxReferenceScriptChunk",
		337:  "MessageType_CardanoTxReferenceInput",
		400:  "MessageType_RippleGetAddress",
		401:  "MessageType_RippleAddress",
		402:  "MessageType_RippleSignTx",
		403:  "MessageType_RippleSignedTx",
		501:  "MessageType_MoneroTransactionInitRequest",
		502:  "MessageType_MoneroTransactionInitAck",
		503:  "MessageType_MoneroTransactionSetInputRequest",
		504:  "MessageType_MoneroTransactionSetInputAck",
		507:  "MessageType_MoneroTransactionInputViniRequest",
		508:  "MessageType_MoneroTransactionInputViniAck",
		509:  "MessageType_MoneroTransactionAllInputsSetRequest",
		510:  "MessageType_MoneroTransactionAllInputsSetAck",
		511:  "MessageType_MoneroTransactionSetOutputRequest",
		512:  "MessageType_MoneroTransactionSetOutputAck",
		513:  "MessageType_MoneroTransactionAllOutSetRequest",
		514:  "MessageType_MoneroTransactionAllOutSetAck",
		515:  "MessageType_MoneroTransactionSignInputRequest",
		516:  "MessageType_MoneroTransactionSignInputAck",
		517:  "MessageType_MoneroTransactionFinalRequest",
		518:  "MessageType_MoneroTransactionFinalAck",
		530:  "MessageType_MoneroKeyImageExportInitRequest",
		531:  "MessageType_MoneroKeyImageExportInitAck",
		532:  "MessageType_MoneroKeyImageSyncStepRequest",
		533:  "MessageType_MoneroKeyImageSyncStepAck",
		534:  "MessageType_MoneroKeyImageSyncFinalRequest",
		535:  "MessageType_MoneroKeyImageSyncFinalAck",
		540:  "MessageType_MoneroGetAddress",
		541:  "MessageType_MoneroAddress",
		542:  "MessageType_MoneroGetWatchKey",
		543:  "MessageType_MoneroWatchKey",
		546:  "MessageType_DebugMoneroDiagRequest",
		547:  "MessageType_DebugMoneroDiagAck",
		550:  "MessageType_MoneroGetTxKeyRequest",
		551:  "MessageType_MoneroGetTxKeyAck",
		552:  "MessageType_MoneroLiveRefreshStartRequest",
		553:  "MessageType_MoneroLiveRefreshStartAck",
		554:  "MessageType_MoneroLiveRefreshStepRequest",
		555:  "MessageType_MoneroLiveRefreshStepAck",
		556:  "MessageType_MoneroLiveRefreshFinalRequest",
		557:  "MessageType_MoneroLiveRefreshFinalAck",
		600:  "MessageType_EosGetPublicKey",
		601:  "MessageType_EosPublicKey",
		602:  "MessageType_EosSignTx",
		603:  "MessageType_EosTxActionRequest",
		604:  "MessageType_EosTxActionAck",
		605:  "MessageType_EosSignedTx",
		800:  "MessageType_WebAuthnListResidentCredentials",
		801:  "MessageType_WebAuthnCredentials",
		802:  "MessageType_WebAuthnAddResidentCredential",
		803:  "MessageType_WebAuthnRemoveResidentCredential",
		900:  "MessageType_SolanaGetPublicKey",
		901:  "MessageType_SolanaPublicKey",
		902:  "MessageType_SolanaGetAddress",
		903:  "MessageType_SolanaAddress",
		904:  "MessageType_SolanaSignTx",
		905:  "MessageType_SolanaTxSignature",
		1000: "MessageType_ThpCreateNewSession",
		1006: "MessageType_ThpPairingRequest",
		1007: "MessageType_ThpPairingRequestApproved",
		1008: "MessageType_ThpSelectMethod",
		1009: "MessageType_ThpPairingPreparationsFinished",
		1010: "MessageType_ThpCredentialRequest",
		1011: "MessageType_ThpCredentialResponse",
		1012: "MessageType_ThpEndRequest",
		1013: "MessageType_ThpEndResponse",
		1016: "MessageType_ThpCodeEntryCommitment",
		1017: "MessageType_ThpCodeEntryChallenge",
		1018: "MessageType_ThpCodeEntryCpaceTrezor",
		1019: "MessageType_ThpCodeEntryCpaceHostTag",
		1020: "MessageType_ThpCodeEntrySecret",
		1024: "MessageType_ThpQrCodeTag",
		1025: "MessageType_ThpQrCodeSecret",
		1032: "MessageType_ThpNfcTagHost",
		1033: "MessageType_ThpNfcTagTrezor",
		2001: "MessageType_NostrGetPubkey",
		2002: "MessageType_NostrPubkey",
		2003: "MessageType_NostrSignEvent",
		2004: "MessageType_NostrEventSignature",
		9100: "MessageType_BenchmarkListNames",
		9101: "MessageType_BenchmarkNames",
		9102: "MessageType_BenchmarkRun",
		9103: "MessageType_BenchmarkResult",
	}
	MessageType_value = map[string]int32{
		"MessageType_Initialize":                           0,
		"MessageType_Ping":                                 1,
		"MessageType_Success":                              2,
		"MessageType_Failure":                              3,
		"MessageType_ChangePin":                            4,
		"MessageType_WipeDevice":                           5,
		"MessageType_GetEntropy":                           9,
		"MessageType_Entropy":                              10,
		"MessageType_LoadDevice":                           13,
		"MessageType_ResetDevice":                          14,
		"MessageType_SetBusy":                              16,
		"MessageType_Features":                             17,
		"MessageType_PinMatrixRequest":                     18,
		"MessageType_PinMatrixAck":                         19,
		"MessageType_Cancel":                               20,
		"MessageType_LockDevice":                           24,
		"MessageType_ApplySettings":                        25,
		"MessageType_ButtonRequest":                        26,
		"MessageType_ButtonAck":                            27,
		"MessageType_ApplyFlags":                           28,
		"MessageType_GetNonce":                             31,
		"MessageType_Nonce":                                33,
		"MessageType_BackupDevice":                         34,
		"MessageType_EntropyRequest":                       35,
		"MessageType_EntropyAck":                           36,
		"MessageType_EntropyCheckReady":                    994,
		"MessageType_EntropyCheckContinue":                 995,
		"MessageType_PassphraseRequest":                    41,
		"MessageType_PassphraseAck":                        42,
		"MessageType_RecoveryDevice":                       45,
		"MessageType_WordRequest":                          46,
		"MessageType_WordAck":                              47,
		"MessageType_GetFeatures":                          55,
		"MessageType_SdProtect":                            79,
		"MessageType_ChangeWipeCode":                       82,
		"MessageType_EndSession":                           83,
		"MessageType_DoPreauthorized":                      84,
		"MessageType_PreauthorizedRequest":                 85,
		"MessageType_CancelAuthorization":                  86,
		"MessageType_RebootToBootloader":                   87,
		"MessageType_GetFirmwareHash":                      88,
		"MessageType_FirmwareHash":                         89,
		"MessageType_UnlockPath":                           93,
		"MessageType_UnlockedPathRequest":                  94,
		"MessageType_ShowDeviceTutorial":                   95,
		"MessageType_UnlockBootloader":                     96,
		"MessageType_AuthenticateDevice":                   97,
		"MessageType_AuthenticityProof":                    98,
		"MessageType_ChangeLanguage":                       990,
		"MessageType_DataChunkRequest":                     991,
		"MessageType_DataChunkAck":                         992,
		"MessageType_SetBrightness":                        993,
		"MessageType_SetU2FCounter":                        63,
		"MessageType_GetNextU2FCounter":                    80,
		"MessageType_NextU2FCounter":                       81,
		"MessageType_Deprecated_PassphraseStateRequest":    77,
		"MessageType_Deprecated_PassphraseStateAck":        78,
		"MessageType_FirmwareErase":                        6,
		"MessageType_FirmwareUpload":                       7,
		"MessageType_FirmwareRequest":                      8,
		"MessageType_ProdTestT1":                           32,
		"MessageType_BleUnpair":                            8001,
		"MessageType_GetPublicKey":                         11,
		"MessageType_PublicKey":                            12,
		"MessageType_SignTx":                               15,
		"MessageType_TxRequest":                            21,
		"MessageType_TxAck":                                22,
		"MessageType_GetAddress":                           29,
		"MessageType_Address":                              30,
		"MessageType_TxAckPaymentRequest":                  37,
		"MessageType_SignMessage":                          38,
		"MessageType_VerifyMessage":                        39,
		"MessageType_MessageSignature":                     40,
		"MessageType_GetOwnershipId":                       43,
		"MessageType_OwnershipId":                          44,
		"MessageType_GetOwnershipProof":                    49,
		"MessageType_OwnershipProof":                       50,
		"MessageType_AuthorizeCoinJoin":                    51,
		"MessageType_CipherKeyValue":                       23,
		"MessageType_CipheredKeyValue":                     48,
		"MessageType_SignIdentity":                         53,
		"MessageType_SignedIdentity":                       54,
		"MessageType_GetECDHSessionKey":                    61,
		"MessageType_ECDHSessionKey":                       62,
		"MessageType_DebugLinkDecision":                    100,
		"MessageType_DebugLinkGetState":                    101,
		"MessageType_DebugLinkState":                       102,
		"MessageType_DebugLinkStop":                        103,
		"MessageType_DebugLinkLog":                         104,
		"MessageType_DebugLinkMemoryRead":                  110,
		"MessageType_DebugLinkMemory":                      111,
		"MessageType_DebugLinkMemoryWrite":                 112,
		"MessageType_DebugLinkFlashErase":                  113,
		"MessageType_DebugLinkLayout":                      9001,
		"MessageType_DebugLinkReseedRandom":                9002,
		"MessageType_DebugLinkRecordScreen":                9003,
		"MessageType_DebugLinkEraseSdCard":                 9005,
		"MessageType_DebugLinkWatchLayout":                 9006,
		"MessageType_DebugLinkResetDebugEvents":            9007,
		"MessageType_DebugLinkOptigaSetSecMax":             9008,
		"MessageType_DebugLinkGetGcInfo":                   9009,
		"MessageType_DebugLinkGcInfo":                      9010,
		"MessageType_DebugLinkGetPairingInfo":              9011,
		"MessageType_DebugLinkPairingInfo":                 9012,
		"MessageType_EthereumGetPublicKey":                 450,
		"MessageType_EthereumPublicKey":                    451,
		"MessageType_EthereumGetAddress":                   56,
		"MessageType_EthereumAddress":                      57,
		"MessageType_EthereumSignTx":                       58,
		"MessageType_EthereumSignTxEIP1559":                452,
		"MessageType_EthereumTxRequest":                    59,
		"MessageType_EthereumTxAck":                        60,
		"MessageType_EthereumSignMessage":                  64,
		"MessageType_EthereumVerifyMessage":                65,
		"MessageType_EthereumMessageSignature":             66,
		"MessageType_EthereumSignTypedData":                464,
		"MessageType_EthereumTypedDataStructRequest":       465,
		"MessageType_EthereumTypedDataStructAck":           466,
		"MessageType_EthereumTypedDataValueRequest":        467,
		"MessageType_EthereumTypedDataValueAck":            468,
		"MessageType_EthereumTypedDataSignature":           469,
		"MessageType_EthereumSignTypedHash":                470,
		"MessageType_NEMGetAddress":                        67,
		"MessageType_NEMAddress":                           68,
		"MessageType_NEMSignTx":                            69,
		"MessageType_NEMSignedTx":                          70,
		"MessageType_NEMDecryptMessage":                    75,
		"MessageType_NEMDecryptedMessage":                  76,
		"MessageType_TezosGetAddress":                      150,
		"MessageType_TezosAddress":                         151,
		"MessageType_TezosSignTx":                          152,
		"MessageType_TezosSignedTx":                        153,
		"MessageType_TezosGetPublicKey":                    154,
		"MessageType_TezosPublicKey":                       155,
		"MessageType_StellarSignTx":                        202,
		"MessageType_StellarTxOpRequest":                   203,
		"MessageType_StellarGetAddress":                    207,
		"MessageType_StellarAddress":                       208,
		"MessageType_StellarCreateAccountOp":               210,
		"MessageType_StellarPaymentOp":                     211,
		"MessageType_StellarPathPaymentStrictReceiveOp":    212,
		"MessageType_StellarManageSellOfferOp":             213,
		"MessageType_StellarCreatePassiveSellOfferOp":      214,
		"MessageType_StellarSetOptionsOp":                  215,
		"MessageType_StellarChangeTrustOp":                 216,
		"MessageType_StellarAllowTrustOp":                  217,
		"MessageType_StellarAccountMergeOp":                218,
		"MessageType_StellarManageDataOp":                  220,
		"MessageType_StellarBumpSequenceOp":                221,
		"MessageType_StellarManageBuyOfferOp":              222,
		"MessageType_StellarPathPaymentStrictSendOp":       223,
		"MessageType_StellarClaimClaimableBalanceOp":       225,
		"MessageType_StellarSignedTx":                      230,
		"MessageType_CardanoGetPublicKey":                  305,
		"MessageType_CardanoPublicKey":                     306,
		"MessageType_CardanoGetAddress":                    307,
		"MessageType_CardanoAddress":                       308,
		"MessageType_CardanoTxItemAck":                     313,
		"MessageType_CardanoTxAuxiliaryDataSupplement":     314,
		"MessageType_CardanoTxWitnessRequest":              315,
		"MessageType_CardanoTxWitnessResponse":             316,
		"MessageType_CardanoTxHostAck":                     317,
		"MessageType_CardanoTxBodyHash":                    318,
		"MessageType_CardanoSignTxFinished":                319,
		"MessageType_CardanoSignTxInit":                    320,
		"MessageType_CardanoTxInput":                       321,
		"MessageType_CardanoTxOutput":                      322,
		"MessageType_CardanoAssetGroup":                    323,
		"MessageType_CardanoToken":                         324,
		"MessageType_CardanoTxCertificate":                 325,
		"MessageType_CardanoTxWithdrawal":                  326,
		"MessageType_CardanoTxAuxiliaryData":               327,
		"MessageType_CardanoPoolOwner":                     328,
		"MessageType_CardanoPoolRelayParameters":           329,
		"MessageType_CardanoGetNativeScriptHash":           330,
		"MessageType_CardanoNativeScriptHash":              331,
		"MessageType_CardanoTxMint":                        332,
		"MessageType_CardanoTxCollateralInput":             333,
		"MessageType_CardanoTxRequiredSigner":              334,
		"MessageType_CardanoTxInlineDatumChunk":            335,
		"MessageType_CardanoTxReferenceScriptChunk":        336,
		"MessageType_CardanoTxReferenceInput":              337,
		"MessageType_RippleGetAddress":                     400,
		"MessageType_RippleAddress":                        401,
		"MessageType_RippleSignTx":                         402,
		"MessageType_RippleSignedTx":                       403,
		"MessageType_MoneroTransactionInitRequest":         501,
		"MessageType_MoneroTransactionInitAck":             502,
		"MessageType_MoneroTransactionSetInputRequest":     503,
		"MessageType_MoneroTransactionSetInputAck":         504,
		"MessageType_MoneroTransactionInputViniRequest":    507,
		"MessageType_MoneroTransactionInputViniAck":        508,
		"MessageType_MoneroTransactionAllInputsSetRequest": 509,
		"MessageType_MoneroTransactionAllInputsSetAck":     510,
		"MessageType_MoneroTransactionSetOutputRequest":    511,
		"MessageType_MoneroTransactionSetOutputAck":        512,
		"MessageType_MoneroTransactionAllOutSetRequest":    513,
		"MessageType_MoneroTransactionAllOutSetAck":        514,
		"MessageType_MoneroTransactionSignInputRequest":    515,
		"MessageType_MoneroTransactionSignInputAck":        516,
		"MessageType_MoneroTransactionFinalRequest":        517,
		"MessageType_MoneroTransactionFinalAck":            518,
		"MessageType_MoneroKeyImageExportInitRequest":      530,
		"MessageType_MoneroKeyImageExportInitAck":          531,
		"MessageType_MoneroKeyImageSyncStepRequest":        532,
		"MessageType_MoneroKeyImageSyncStepAck":            533,
		"MessageType_MoneroKeyImageSyncFinalRequest":       534,
		"MessageType_MoneroKeyImageSyncFinalAck":           535,
		"MessageType_MoneroGetAddress":                     540,
		"MessageType_MoneroAddress":                        541,
		"MessageType_MoneroGetWatchKey":                    542,
		"MessageType_MoneroWatchKey":                       543,
		"MessageType_DebugMoneroDiagRequest":               546,
		"MessageType_DebugMoneroDiagAck":                   547,
		"MessageType_MoneroGetTxKeyRequest":                550,
		"MessageType_MoneroGetTxKeyAck":                    551,
		"MessageType_MoneroLiveRefreshStartRequest":        552,
		"MessageType_MoneroLiveRefreshStartAck":            553,
		"MessageType_MoneroLiveRefreshStepRequest":         554,
		"MessageType_MoneroLiveRefreshStepAck":             555,
		"MessageType_MoneroLiveRefreshFinalRequest":        556,
		"MessageType_MoneroLiveRefreshFinalAck":            557,
		"MessageType_EosGetPublicKey":                      600,
		"MessageType_EosPublicKey":                         601,
		"MessageType_EosSignTx":                            602,
		"MessageType_EosTxActionRequest":                   603,
		"MessageType_EosTxActionAck":                       604,
		"MessageType_EosSignedTx":                          605,
		"MessageType_WebAuthnListResidentCredentials":      800,
		"MessageType_WebAuthnCredentials":                  801,
		"MessageType_WebAuthnAddResidentCredential":        802,
		"MessageType_WebAuthnRemoveResidentCredential":     803,
		"MessageType_SolanaGetPublicKey":                   900,
		"MessageType_SolanaPublicKey":                      901,
		"MessageType_SolanaGetAddress":                     902,
		"MessageType_SolanaAddress":                        903,
		"MessageType_SolanaSignTx":                         904,
		"MessageType_SolanaTxSignature":                    905,
		"MessageType_ThpCreateNewSession":                  1000,
		"MessageType_ThpPairingRequest":                    1006,
		"MessageType_ThpPairingRequestApproved":            1007,
		"MessageType_ThpSelectMethod":                      1008,
		"MessageType_ThpPairingPreparationsFinished":       1009,
		"MessageType_ThpCredentialRequest":                 1010,
		"MessageType_ThpCredentialResponse":                1011,
		"MessageType_ThpEndRequest":                        1012,
		"MessageType_ThpEndResponse":                       1013,
		"MessageType_ThpCodeEntryCommitment":               1016,
		"MessageType_ThpCodeEntryChallenge":                1017,
		"MessageType_ThpCodeEntryCpaceTrezor":              1018,
		"MessageType_ThpCodeEntryCpaceHostTag":             1019,
		"MessageType_ThpCodeEntrySecret":                   1020,
		"MessageType_ThpQrCodeTag":                         1024,
		"MessageType_ThpQrCodeSecret":                      1025,
		"MessageType_ThpNfcTagHost":                        1032,
		"MessageType_ThpNfcTagTrezor":                      1033,
		"MessageType_NostrGetPubkey":                       2001,
		"MessageType_NostrPubkey":                          2002,
		"MessageType_NostrSignEvent":                       2003,
		"MessageType_NostrEventSignature":                  2004,
		"MessageType_BenchmarkListNames":                   9100,
		"MessageType_BenchmarkNames":                       9101,
		"MessageType_BenchmarkRun":                         9102,
		"MessageType_BenchmarkResult":                      9103,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MessageType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MessageType(num)
	return nil
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

var File_messages_proto protoreflect.FileDescriptor

const file_messages_proto_rawDesc = "" +
	"\n" +
	"\x0emessages.proto\x12\x12hw.trezor.messages\x1a\roptions.proto*\xfe[\n" +
	"\vMessageType\x12(\n" +
	"\x16MessageType_Initialize\x10\x00\x1a\f\x90\xb5\x18\x01\xb0\xb5\x18\x01\x80\xa6\x1d\x01\x12\x1e\n" +
	"\x10MessageType_Ping\x10\x01\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12%\n" +
	"\x13MessageType_Success\x10\x02\x1a\f\x98\xb5\x18\x01\xa8\xb5\x18\x01\x80\xa6\x1d\x01\x12%\n" +
	"\x13MessageType_Failure\x10\x03\x1a\f\x98\xb5\x18\x01\xa8\xb5\x18\x01\x80\xa6\x1d\x01\x12#\n" +
	"\x15MessageType_ChangePin\x10\x04\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12$\n" +
	"\x16MessageType_WipeDevice\x10\x05\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12$\n" +
	"\x16MessageType_GetEntropy\x10\t\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12!\n" +
	"\x13MessageType_Entropy\x10\n" +
	"\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12$\n" +
	"\x16MessageType_LoadDevice\x10\r\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12%\n" +
	"\x17MessageType_ResetDevice\x10\x0e\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12!\n" +
	"\x13MessageType_SetBusy\x10\x10\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12\"\n" +
	"\x14MessageType_Features\x10\x11\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12*\n" +
	"\x1cMessageType_PinMatrixRequest\x10\x12\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12.\n" +
	"\x18MessageType_PinMatrixAck\x10\x13\x1a\x10\x90\xb5\x18\x01\xb0\xb5\x18\x01\xc0\xb5\x18\x01\x80\xa6\x1d\x01\x12$\n" +
	"\x12MessageType_Cancel\x10\x14\x1a\f\x90\xb5\x18\x01\xb0\xb5\x18\x01\x80\xa6\x1d\x01\x12$\n" +
	"\x16MessageType_LockDevice\x10\x18\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12'\n" +
	"\x19MessageType_ApplySettings\x10\x19\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12'\n" +
	"\x19MessageType_ButtonRequest\x10\x1a\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12+\n" +
	"\x15MessageType_ButtonAck\x10\x1b\x1a\x10\x90\xb5\x18\x01\xb0\xb5\x18\x01\xc0\xb5\x18\x01\x80\xa6\x1d\x01\x12$\n" +
	"\x16MessageType_ApplyFlags\x10\x1c\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12\"\n" +
	"\x14MessageType_GetNonce\x10\x1f\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12\x1f\n" +
	"\x11MessageType_Nonce\x10!\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12&\n" +
	"\x18MessageType_BackupDevice\x10\"\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12(\n" +
	"\x1aMessageType_EntropyRequest\x10#\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12$\n" +
	"\x16MessageType_EntropyAck\x10$\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12,\n" +
	"\x1dMessageType_EntropyCheckReady\x10\xe2\a\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12/\n" +
	" MessageType_EntropyCheckContinue\x10\xe3\a\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12+\n" +
	"\x1dMessageType_PassphraseRequest\x10)\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12/\n" +
	"\x19MessageType_PassphraseAck\x10*\x1a\x10\x90\xb5\x18\x01\xb0\xb5\x18\x01\xc0\xb5\x18\x01\x80\xa6\x1d\x01\x12(\n" +
	"\x1aMessageType_RecoveryDevice\x10-\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12%\n" +
	"\x17MessageType_WordRequest\x10.\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12!\n" +
	"\x13MessageType_WordAck\x10/\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12%\n" +
	"\x17MessageType_GetFeatures\x107\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12#\n" +
	"\x15MessageType_SdProtect\x10O\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12(\n" +
	"\x1aMessageType_ChangeWipeCode\x10R\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12$\n" +
	"\x16MessageType_EndSession\x10S\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12)\n" +
	"\x1bMessageType_DoPreauthorized\x10T\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12.\n" +
	" MessageType_PreauthorizedRequest\x10U\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12-\n" +
	"\x1fMessageType_CancelAuthorization\x10V\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12,\n" +
	"\x1eMessageType_RebootToBootloader\x10W\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12)\n" +
	"\x1bMessageType_GetFirmwareHash\x10X\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12&\n" +
	"\x18MessageType_FirmwareHash\x10Y\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12$\n" +
	"\x16MessageType_UnlockPath\x10]\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12-\n" +
	"\x1fMessageType_UnlockedPathRequest\x10^\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12,\n" +
	"\x1eMessageType_ShowDeviceTutorial\x10_\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12*\n" +
	"\x1cMessageType_UnlockBootloader\x10`\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12,\n" +
	"\x1eMessageType_AuthenticateDevice\x10a\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12+\n" +
	"\x1dMessageType_AuthenticityProof\x10b\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12)\n" +
	"\x1aMessageType_ChangeLanguage\x10\xde\a\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12+\n" +
	"\x1cMessageType_DataChunkRequest\x10\xdf\a\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12'\n" +
	"\x18MessageType_DataChunkAck\x10\xe0\a\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12(\n" +
	"\x19MessageType_SetBrightness\x10\xe1\a\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12#\n" +
	"\x19MessageType_SetU2FCounter\x10?\x1a\x04\x90\xb5\x18\x01\x12'\n" +
	"\x1dMessageType_GetNextU2FCounter\x10P\x1a\x04\x90\xb5\x18\x01\x12$\n" +
	"\x1aMessageType_NextU2FCounter\x10Q\x1a\x04\x98\xb5\x18\x01\x125\n" +
	"-MessageType_Deprecated_PassphraseStateRequest\x10M\x1a\x02\b\x01\x121\n" +
	")MessageType_Deprecated_PassphraseStateAck\x10N\x1a\x02\b\x01\x12+\n" +
	"\x19MessageType_FirmwareErase\x10\x06\x1a\f\x90\xb5\x18\x01\xb8\xb5\x18\x01\x80\xa6\x1d\x01\x12,\n" +
	"\x1aMessageType_FirmwareUpload\x10\a\x1a\f\x90\xb5\x18\x01\xb8\xb5\x18\x01\x80\xa6\x1d\x01\x12-\n" +
	"\x1bMessageType_FirmwareRequest\x10\b\x1a\f\x98\xb5\x18\x01\xb8\xb5\x18\x01\x80\xa6\x1d\x01\x12(\n" +
	"\x16MessageType_ProdTestT1\x10 \x1a\f\x90\xb5\x18\x01\xb8\xb5\x18\x01\x80\xa6\x1d\x01\x12$\n" +
	"\x15MessageType_BleUnpair\x10\xc1>\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12&\n" +
	"\x18MessageType_GetPublicKey\x10\v\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12#\n" +
	"\x15MessageType_PublicKey\x10\f\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12 \n" +
	"\x12MessageType_SignTx\x10\x0f\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12#\n" +
	"\x15MessageType_TxRequest\x10\x15\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12\x1f\n" +
	"\x11MessageType_TxAck\x10\x16\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12$\n" +
	"\x16MessageType_GetAddress\x10\x1d\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12!\n" +
	"\x13MessageType_Address\x10\x1e\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12)\n" +
	"\x1fMessageType_TxAckPaymentRequest\x10%\x1a\x04\x90\xb5\x18\x01\x12%\n" +
	"\x17MessageType_SignMessage\x10&\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12'\n" +
	"\x19MessageType_VerifyMessage\x10'\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12*\n" +
	"\x1cMessageType_MessageSignature\x10(\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12(\n" +
	"\x1aMessageType_GetOwnershipId\x10+\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12%\n" +
	"\x17MessageType_OwnershipId\x10,\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12+\n" +
	"\x1dMessageType_GetOwnershipProof\x101\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12(\n" +
	"\x1aMessageType_OwnershipProof\x102\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12+\n" +
	"\x1dMessageType_AuthorizeCoinJoin\x103\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12(\n" +
	"\x1aMessageType_CipherKeyValue\x10\x17\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12*\n" +
	"\x1cMessageType_CipheredKeyValue\x100\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12&\n" +
	"\x18MessageType_SignIdentity\x105\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12(\n" +
	"\x1aMessageType_SignedIdentity\x106\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x12+\n" +
	"\x1dMessageType_GetECDHSessionKey\x10=\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12(\n" +
	"\x1aMessageType_ECDHSessionKey\x10>\x1a\b\x98\xb5\x18\x01\x80\xa6\x1d\x01\x123\n" +
	"\x1dMessageType_DebugLinkDecision\x10d\x1a\x10\xa0\xb5\x18\x01\xb0\xb5\x18\x01\xc0\xb5\x18\x01\x80\xa6\x1d\x01\x12/\n" +
	"\x1dMessageType_DebugLinkGetState\x10e\x1a\f\xa0\xb5\x18\x01\xb0\xb5\x18\x01\x80\xa6\x1d\x01\x12(\n" +
	"\x1aMessageType_DebugLinkState\x10f\x1a\b\xa8\xb5\x18\x01\x80\xa6\x1d\x01\x12'\n" +
	"\x19MessageType_DebugLinkStop\x10g\x1a\b\xa0\xb5\x18\x01\x80\xa6\x1d\x01\x12&\n" +
	"\x18MessageType_DebugLinkLog\x10h\x1a\b\xa8\xb5\x18\x01\x80\xa6\x1d\x01\x12-\n" +
	"\x1fMessageType_DebugLinkMemoryRead\x10n\x1a\b\xa0\xb5\x18\x01\x80\xa6\x1d\x01\x12)\n" +
	"\x1bMessageType_DebugLinkMemory\x10o\x1a\b\xa8\xb5\x18\x01\x80\xa6\x1d\x01\x12.\n" +
	" MessageType_DebugLinkMemoryWrite\x10p\x1a\b\xa0\xb5\x18\x01\x80\xa6\x1d\x01\x12-\n" +
	"\x1fMessageType_DebugLinkFlashErase\x10q\x1a\b\xa0\xb5\x18\x01\x80\xa6\x1d\x01\x12*\n" +
	"\x1bMessageType_DebugLinkLayout\x10\xa9F\x1a\b\xa8\xb5\x18\x01\x80\xa6\x1d\x01\x120\n" +
	"!MessageType_DebugLinkReseedRandom\x10\xaaF\x1a\b\xa0\xb5\x18\x01\x80\xa6\x1d\x01\x120\n" +
	"!MessageType_DebugLinkRecordScreen\x10\xabF\x1a\b\xa0\xb5\x18\x01\x80\xa6\x1d\x01\x12/\n" +
	" MessageType_DebugLinkEraseSdCard\x10\xadF\x1a\b\xa0\xb5\x18\x01\x80\xa6\x1d\x01\x12/\n" +
	" MessageType_DebugLinkWatchLayout\x10\xaeF\x1a\b\xa0\xb5\x18\x01\x80\xa6\x1d\x01\x124\n" +
	"%MessageType_DebugLinkResetDebugEvents\x10\xafF\x1a\b\xa0\xb5\x18\x01\x80\xa6\x1d\x01\x123\n" +
	"$MessageType_DebugLinkOptigaSetSecMax\x10\xb0F\x1a\b\xa0\xb5\x18\x01\x80\xa6\x1d\x01\x12-\n" +
	"\x1eMessageType_DebugLinkGetGcInfo\x10\xb1F\x1a\b\xa0\xb5\x18\x01\x80\xa6\x1d\x01\x12*\n" +
	"\x1bMessageType_DebugLinkGcInfo\x10\xb2F\x1a\b\xa8\xb5\x18\x01\x80\xa6\x1d\x01\x122\n" +
	"#MessageType_DebugLinkGetPairingInfo\x10\xb3F\x1a\b\xa0\xb5\x18\x01\x80\xa6\x1d\x01\x12/\n" +
	" MessageType_DebugLinkPairingInfo\x10\xb4F\x1a\b\xa8\xb5\x18\x01\x80\xa6\x1d\x01\x12+\n" +
	" MessageType_EthereumGetPublicKey\x10\xc2\x03\x1a\x04\x90\xb5\x18\x01\x12(\n" +
	"\x1dMessageType_EthereumPublicKey\x10\xc3\x03\x1a\x04\x98\xb5\x18\x01\x12(\n" +
	"\x1eMessageType_EthereumGetAddress\x108\x1a\x04\x90\xb5\x18\x01\x12%\n" +
	"\x1bMessageType_EthereumAddress\x109\x1a\x04\x98\xb5\x18\x01\x12$\n" +
	"\x1aMessageType_EthereumSignTx\x10:\x1a\x04\x90\xb5\x18\x01\x12,\n" +
	"!MessageType_EthereumSignTxEIP1559\x10\xc4\x03\x1a\x04\x90\xb5\x18\x01\x12'\n" +
	"\x1dMessageType_EthereumTxRequest\x10;\x1a\x04\x98\xb5\x18\x01\x12#\n" +
	"\x19MessageType_EthereumTxAck\x10<\x1a\x04\x90\xb5\x18\x01\x12)\n" +
	"\x1fMessageType_EthereumSignMessage\x10@\x1a\x04\x90\xb5\x18\x01\x12+\n" +
	"!MessageType_EthereumVerifyMessage\x10A\x1a\x04\x90\xb5\x18\x01\x12.\n" +
	"$MessageType_EthereumMessageSignature\x10B\x1a\x04\x98\xb5\x18\x01\x12,\n" +
	"!MessageType_EthereumSignTypedData\x10\xd0\x03\x1a\x04\x90\xb5\x18\x01\x125\n" +
	"*MessageType_EthereumTypedDataStructRequest\x10\xd1\x03\x1a\x04\x98\xb5\x18\x01\x121\n" +
	"&MessageType_EthereumTypedDataStructAck\x10\xd2\x03\x1a\x04\x90\xb5\x18\x01\x124\n" +
	")MessageType_EthereumTypedDataValueRequest\x10\xd3\x03\x1a\x04\x98\xb5\x18\x01\x120\n" +
	"%MessageType_EthereumTypedDataValueAck\x10\xd4\x03\x1a\x04\x90\xb5\x18\x01\x121\n" +
	"&MessageType_EthereumTypedDataSignature\x10\xd5\x03\x1a\x04\x98\xb5\x18\x01\x12,\n" +
	"!MessageType_EthereumSignTypedHash\x10\xd6\x03\x1a\x04\x90\xb5\x18\x01\x12#\n" +
	"\x19MessageType_NEMGetAddress\x10C\x1a\x04\x90\xb5\x18\x01\x12 \n" +
	"\x16MessageType_NEMAddress\x10D\x1a\x04\x98\xb5\x18\x01\x12\x1f\n" +
	"\x15MessageType_NEMSignTx\x10E\x1a\x04\x90\xb5\x18\x01\x12!\n" +
	"\x17MessageType_NEMSignedTx\x10F\x1a\x04\x98\xb5\x18\x01\x12'\n" +
	"\x1dMessageType_NEMDecryptMessage\x10K\x1a\x04\x90\xb5\x18\x01\x12)\n" +
	"\x1fMessageType_NEMDecryptedMessage\x10L\x1a\x04\x98\xb5\x18\x01\x12&\n" +
	"\x1bMessageType_TezosGetAddress\x10\x96\x01\x1a\x04\x90\xb5\x18\x01\x12#\n" +
	"\x18MessageType_TezosAddress\x10\x97\x01\x1a\x04\x98\xb5\x18\x01\x12\"\n" +
	"\x17MessageType_TezosSignTx\x10\x98\x01\x1a\x04\x90\xb5\x18\x01\x12$\n" +
	"\x19MessageType_TezosSignedTx\x10\x99\x01\x1a\x04\x98\xb5\x18\x01\x12(\n" +
	"\x1dMessageType_TezosGetPublicKey\x10\x9a\x01\x1a\x04\x90\xb5\x18\x01\x12%\n" +
	"\x1aMessageType_TezosPublicKey\x10\x9b\x01\x1a\x04\x98\xb5\x18\x01\x12$\n" +
	"\x19MessageType_StellarSignTx\x10\xca\x01\x1a\x04\x90\xb5\x18\x01\x12)\n" +
	"\x1eMessageType_StellarTxOpRequest\x10\xcb\x01\x1a\x04\x98\xb5\x18\x01\x12(\n" +
	"\x1dMessageType_StellarGetAddress\x10\xcf\x01\x1a\x04\x90\xb5\x18\x01\x12%\n" +
	"\x1aMessageType_StellarAddress\x10\xd0\x01\x1a\x04\x98\xb5\x18\x01\x12-\n" +
	"\"MessageType_StellarCreateAccountOp\x10\xd2\x01\x1a\x04\x90\xb5\x18\x01\x12'\n" +
	"\x1cMessageType_StellarPaymentOp\x10\xd3\x01\x1a\x04\x90\xb5\x18\x01\x128\n" +
	"-MessageType_StellarPathPaymentStrictReceiveOp\x10\xd4\x01\x1a\x04\x90\xb5\x18\x01\x12/\n" +
	"$MessageType_StellarManageSellOfferOp\x10\xd5\x01\x1a\x04\x90\xb5\x18\x01\x126\n" +
	"+MessageType_StellarCreatePassiveSellOfferOp\x10\xd6\x01\x1a\x04\x90\xb5\x18\x01\x12*\n" +
	"\x1fMessageType_StellarSetOptionsOp\x10\xd7\x01\x1a\x04\x90\xb5\x18\x01\x12+\n" +
	" MessageType_StellarChangeTrustOp\x10\xd8\x01\x1a\x04\x90\xb5\x18\x01\x12*\n" +
	"\x1fMessageType_StellarAllowTrustOp\x10\xd9\x01\x1a\x04\x90\xb5\x18\x01\x12,\n" +
	"!MessageType_StellarAccountMergeOp\x10\xda\x01\x1a\x04\x90\xb5\x18\x01\x12*\n" +
	"\x1fMessageType_StellarManageDataOp\x10\xdc\x01\x1a\x04\x90\xb5\x18\x01\x12,\n" +
	"!MessageType_StellarBumpSequenceOp\x10\xdd\x01\x1a\x04\x90\xb5\x18\x01\x12.\n" +
	"#MessageType_StellarManageBuyOfferOp\x10\xde\x01\x1a\x04\x90\xb5\x18\x01\x125\n" +
	"*MessageType_StellarPathPaymentStrictSendOp\x10\xdf\x01\x1a\x04\x90\xb5\x18\x01\x125\n" +
	"*MessageType_StellarClaimClaimableBalanceOp\x10\xe1\x01\x1a\x04\x90\xb5\x18\x01\x12&\n" +
	"\x1bMessageType_StellarSignedTx\x10\xe6\x01\x1a\x04\x98\xb5\x18\x01\x12*\n" +
	"\x1fMessageType_CardanoGetPublicKey\x10\xb1\x02\x1a\x04\x90\xb5\x18\x01\x12'\n" +
	"\x1cMessageType_CardanoPublicKey\x10\xb2\x02\x1a\x04\x98\xb5\x18\x01\x12(\n" +
	"\x1dMessageType_CardanoGetAddress\x10\xb3\x02\x1a\x04\x90\xb5\x18\x01\x12%\n" +
	"\x1aMessageType_CardanoAddress\x10\xb4\x02\x1a\x04\x98\xb5\x18\x01\x12'\n" +
	"\x1cMessageType_CardanoTxItemAck\x10\xb9\x02\x1a\x04\x98\xb5\x18\x01\x127\n" +
	",MessageType_CardanoTxAuxiliaryDataSupplement\x10\xba\x02\x1a\x04\x98\xb5\x18\x01\x12.\n" +
	"#MessageType_CardanoTxWitnessRequest\x10\xbb\x02\x1a\x04\x90\xb5\x18\x01\x12/\n" +
	"$MessageType_CardanoTxWitnessResponse\x10\xbc\x02\x1a\x04\x98\xb5\x18\x01\x12'\n" +
	"\x1cMessageType_CardanoTxHostAck\x10\xbd\x02\x1a\x04\x90\xb5\x18\x01\x12(\n" +
	"\x1dMessageType_CardanoTxBodyHash\x10\xbe\x02\x1a\x04\x98\xb5\x18\x01\x12,\n" +
	"!MessageType_CardanoSignTxFinished\x10\xbf\x02\x1a\x04\x98\xb5\x18\x01\x12(\n" +
	"\x1dMessageType_CardanoSignTxInit\x10\xc0\x02\x1a\x04\x90\xb5\x18\x01\x12%\n" +
	"\x1aMessageType_CardanoTxInput\x10\xc1\x02\x1a\x04\x90\xb5\x18\x01\x12&\n" +
	"\x1bMessageType_CardanoTxOutput\x10\xc2\x02\x1a\x04\x90\xb5\x18\x01\x12(\n" +
	"\x1dMessageType_CardanoAssetGroup\x10\xc3\x02\x1a\x04\x90\xb5\x18\x01\x12#\n" +
	"\x18MessageType_CardanoToken\x10\xc4\x02\x1a\x04\x90\xb5\x18\x01\x12+\n" +
	" MessageType_CardanoTxCertificate\x10\xc5\x02\x1a\x04\x90\xb5\x18\x01\x12*\n" +
	"\x1fMessageType_CardanoTxWithdrawal\x10\xc6\x02\x1a\x04\x90\xb5\x18\x01\x12-\n" +
	"\"MessageType_CardanoTxAuxiliaryData\x10\xc7\x02\x1a\x04\x90\xb5\x18\x01\x12'\n" +
	"\x1cMessageType_CardanoPoolOwner\x10\xc8\x02\x1a\x04\x90\xb5\x18\x01\x121\n" +
	"&MessageType_CardanoPoolRelayParameters\x10\xc9\x02\x1a\x04\x90\xb5\x18\x01\x121\n" +
	"&MessageType_CardanoGetNativeScriptHash\x10\xca\x02\x1a\x04\x90\xb5\x18\x01\x12.\n" +
	"#MessageType_CardanoNativeScriptHash\x10\xcb\x02\x1a\x04\x98\xb5\x18\x01\x12$\n" +
	"\x19MessageType_CardanoTxMint\x10\xcc\x02\x1a\x04\x90\xb5\x18\x01\x12/\n" +
	"$MessageType_CardanoTxCollateralInput\x10\xcd\x02\x1a\x04\x90\xb5\x18\x01\x12.\n" +
	"#MessageType_CardanoTxRequiredSigner\x10\xce\x02\x1a\x04\x90\xb5\x18\x01\x120\n" +
	"%MessageType_CardanoTxInlineDatumChunk\x10\xcf\x02\x1a\x04\x90\xb5\x18\x01\x124\n" +
	")MessageType_CardanoTxReferenceScriptChunk\x10\xd0\x02\x1a\x04\x90\xb5\x18\x01\x12.\n" +
	"#MessageType_CardanoTxReferenceInput\x10\xd1\x02\x1a\x04\x90\xb5\x18\x01\x12'\n" +
	"\x1cMessageType_RippleGetAddress\x10\x90\x03\x1a\x04\x90\xb5\x18\x01\x12$\n" +
	"\x19MessageType_RippleAddress\x10\x91\x03\x1a\x04\x98\xb5\x18\x01\x12#\n" +
	"\x18MessageType_RippleSignTx\x10\x92\x03\x1a\x04\x90\xb5\x18\x01\x12%\n" +
	"\x1aMessageType_RippleSignedTx\x10\x93\x03\x1a\x04\x90\xb5\x18\x01\x123\n" +
	"(MessageType_MoneroTransactionInitRequest\x10\xf5\x03\x1a\x04\x98\xb5\x18\x01\x12/\n" +
	"$MessageType_MoneroTransactionInitAck\x10\xf6\x03\x1a\x04\x98\xb5\x18\x01\x127\n" +
	",MessageType_MoneroTransactionSetInputRequest\x10\xf7\x03\x1a\x04\x98\xb5\x18\x01\x123\n" +
	"(MessageType_MoneroTransactionSetInputAck\x10\xf8\x03\x1a\x04\x98\xb5\x18\x01\x128\n" +
	"-MessageType_MoneroTransactionInputViniRequest\x10\xfb\x03\x1a\x04\x98\xb5\x18\x01\x124\n" +
	")MessageType_MoneroTransactionInputViniAck\x10\xfc\x03\x1a\x04\x98\xb5\x18\x01\x12;\n" +
	"0MessageType_MoneroTransactionAllInputsSetRequest\x10\xfd\x03\x1a\x04\x98\xb5\x18\x01\x127\n" +
	",MessageType_MoneroTransactionAllInputsSetAck\x10\xfe\x03\x1a\x04\x98\xb5\x18\x01\x128\n" +
	"-MessageType_MoneroTransactionSetOutputRequest\x10\xff\x03\x1a\x04\x98\xb5\x18\x01\x124\n" +
	")MessageType_MoneroTransactionSetOutputAck\x10\x80\x04\x1a\x04\x98\xb5\x18\x01\x128\n" +
	"-MessageType_MoneroTransactionAllOutSetRequest\x10\x81\x04\x1a\x04\x98\xb5\x18\x01\x124\n" +
	")MessageType_MoneroTransactionAllOutSetAck\x10\x82\x04\x1a\x04\x98\xb5\x18\x01\x128\n" +
	"-MessageType_MoneroTransactionSignInputRequest\x10\x83\x04\x1a\x04\x98\xb5\x18\x01\x124\n" +
	")MessageType_MoneroTransactionSignInputAck\x10\x84\x04\x1a\x04\x98\xb5\x18\x01\x124\n" +
	")MessageType_MoneroTransactionFinalRequest\x10\x85\x04\x1a\x04\x98\xb5\x18\x01\x120\n" +
	"%MessageType_MoneroTransactionFinalAck\x10\x86\x04\x1a\x04\x98\xb5\x18\x01\x126\n" +
	"+MessageType_MoneroKeyImageExportInitRequest\x10\x92\x04\x1a\x04\x98\xb5\x18\x01\x122\n" +
	"'MessageType_MoneroKeyImageExportInitAck\x10\x93\x04\x1a\x04\x98\xb5\x18\x01\x124\n" +
	")MessageType_MoneroKeyImageSyncStepRequest\x10\x94\x04\x1a\x04\x98\xb5\x18\x01\x120\n" +
	"%MessageType_MoneroKeyImageSyncStepAck\x10\x95\x04\x1a\x04\x98\xb5\x18\x01\x125\n" +
	"*MessageType_MoneroKeyImageSyncFinalRequest\x10\x96\x04\x1a\x04\x98\xb5\x18\x01\x121\n" +
	"&MessageType_MoneroKeyImageSyncFinalAck\x10\x97\x04\x1a\x04\x98\xb5\x18\x01\x12'\n" +
	"\x1cMessageType_MoneroGetAddress\x10\x9c\x04\x1a\x04\x90\xb5\x18\x01\x12$\n" +
	"\x19MessageType_MoneroAddress\x10\x9d\x04\x1a\x04\x98\xb5\x18\x01\x12(\n" +
	"\x1dMessageType_MoneroGetWatchKey\x10\x9e\x04\x1a\x04\x90\xb5\x18\x01\x12%\n" +
	"\x1aMessageType_MoneroWatchKey\x10\x9f\x04\x1a\x04\x98\xb5\x18\x01\x12-\n" +
	"\"MessageType_DebugMoneroDiagRequest\x10\xa2\x04\x1a\x04\x90\xb5\x18\x01\x12)\n" +
	"\x1eMessageType_DebugMoneroDiagAck\x10\xa3\x04\x1a\x04\x98\xb5\x18\x01\x12,\n" +
	"!MessageType_MoneroGetTxKeyRequest\x10\xa6\x04\x1a\x04\x90\xb5\x18\x01\x12(\n" +
	"\x1dMessageType_MoneroGetTxKeyAck\x10\xa7\x04\x1a\x04\x98\xb5\x18\x01\x124\n" +
	")MessageType_MoneroLiveRefreshStartRequest\x10\xa8\x04\x1a\x04\x90\xb5\x18\x01\x120\n" +
	"%MessageType_MoneroLiveRefreshStartAck\x10\xa9\x04\x1a\x04\x98\xb5\x18\x01\x123\n" +
	"(MessageType_MoneroLiveRefreshStepRequest\x10\xaa\x04\x1a\x04\x90\xb5\x18\x01\x12/\n" +
	"$MessageType_MoneroLiveRefreshStepAck\x10\xab\x04\x1a\x04\x98\xb5\x18\x01\x124\n" +
	")MessageType_MoneroLiveRefreshFinalRequest\x10\xac\x04\x1a\x04\x90\xb5\x18\x01\x120\n" +
	"%MessageType_MoneroLiveRefreshFinalAck\x10\xad\x04\x1a\x04\x98\xb5\x18\x01\x12&\n" +
	"\x1bMessageType_EosGetPublicKey\x10\xd8\x04\x1a\x04\x90\xb5\x18\x01\x12#\n" +
	"\x18MessageType_EosPublicKey\x10\xd9\x04\x1a\x04\x98\xb5\x18\x01\x12 \n" +
	"\x15MessageType_EosSignTx\x10\xda\x04\x1a\x04\x90\xb5\x18\x01\x12)\n" +
	"\x1eMessageType_EosTxActionRequest\x10\xdb\x04\x1a\x04\x98\xb5\x18\x01\x12%\n" +
	"\x1aMessageType_EosTxActionAck\x10\xdc\x04\x1a\x04\x90\xb5\x18\x01\x12\"\n" +
	"\x17MessageType_EosSignedTx\x10\xdd\x04\x1a\x04\x98\xb5\x18\x01\x126\n" +
	"+MessageType_WebAuthnListResidentCredentials\x10\xa0\x06\x1a\x04\x90\xb5\x18\x01\x12*\n" +
	"\x1fMessageType_WebAuthnCredentials\x10\xa1\x06\x1a\x04\x98\xb5\x18\x01\x124\n" +
	")MessageType_WebAuthnAddResidentCredential\x10\xa2\x06\x1a\x04\x90\xb5\x18\x01\x127\n" +
	",MessageType_WebAuthnRemoveResidentCredential\x10\xa3\x06\x1a\x04\x90\xb5\x18\x01\x12)\n" +
	"\x1eMessageType_SolanaGetPublicKey\x10\x84\a\x1a\x04\x90\xb5\x18\x01\x12&\n" +
	"\x1bMessageType_SolanaPublicKey\x10\x85\a\x1a\x04\x98\xb5\x18\x01\x12'\n" +
	"\x1cMessageType_SolanaGetAddress\x10\x86\a\x1a\x04\x90\xb5\x18\x01\x12$\n" +
	"\x19MessageType_SolanaAddress\x10\x87\a\x1a\x04\x98\xb5\x18\x01\x12#\n" +
	"\x18MessageType_SolanaSignTx\x10\x88\a\x1a\x04\x90\xb5\x18\x01\x12(\n" +
	"\x1dMessageType_SolanaTxSignature\x10\x89\a\x1a\x04\x98\xb5\x18\x01\x12.\n" +
	"\x1fMessageType_ThpCreateNewSession\x10\xe8\a\x1a\b\x90\xb5\x18\x01\x80\xa6\x1d\x01\x12(\n" +
	"\x1dMessageType_ThpPairingRequest\x10\xee\a\x1a\x04\x80\xa6\x1d\x01\x120\n" +
	"%MessageType_ThpPairingRequestApproved\x10\xef\a\x1a\x04\x80\xa6\x1d\x01\x12&\n" +
	"\x1bMessageType_ThpSelectMethod\x10\xf0\a\x1a\x04\x80\xa6\x1d\x01\x125\n" +
	"*MessageType_ThpPairingPreparationsFinished\x10\xf1\a\x1a\x04\x80\xa6\x1d\x01\x12+\n" +
	" MessageType_ThpCredentialRequest\x10\xf2\a\x1a\x04\x80\xa6\x1d\x01\x12,\n" +
	"!MessageType_ThpCredentialResponse\x10\xf3\a\x1a\x04\x80\xa6\x1d\x01\x12$\n" +
	"\x19MessageType_ThpEndRequest\x10\xf4\a\x1a\x04\x80\xa6\x1d\x01\x12%\n" +
	"\x1aMessageType_ThpEndResponse\x10\xf5\a\x1a\x04\x80\xa6\x1d\x01\x12-\n" +
	"\"MessageType_ThpCodeEntryCommitment\x10\xf8\a\x1a\x04\x80\xa6\x1d\x01\x12,\n" +
	"!MessageType_ThpCodeEntryChallenge\x10\xf9\a\x1a\x04\x80\xa6\x1d\x01\x12.\n" +
	"#MessageType_ThpCodeEntryCpaceTrezor\x10\xfa\a\x1a\x04\x80\xa6\x1d\x01\x12/\n" +
	"$MessageType_ThpCodeEntryCpaceHostTag\x10\xfb\a\x1a\x04\x80\xa6\x1d\x01\x12)\n" +
	"\x1eMessageType_ThpCodeEntrySecret\x10\xfc\a\x1a\x04\x80\xa6\x1d\x01\x12#\n" +
	"\x18MessageType_ThpQrCodeTag\x10\x80\b\x1a\x04\x80\xa6\x1d\x01\x12&\n" +
	"\x1bMessageType_ThpQrCodeSecret\x10\x81\b\x1a\x04\x80\xa6\x1d\x01\x12$\n" +
	"\x19MessageType_ThpNfcTagHost\x10\x88\b\x1a\x04\x80\xa6\x1d\x01\x12&\n" +
	"\x1bMessageType_ThpNfcTagTrezor\x10\x89\b\x1a\x04\x80\xa6\x1d\x01\x12%\n" +
	"\x1aMessageType_NostrGetPubkey\x10\xd1\x0f\x1a\x04\x90\xb5\x18\x01\x12\"\n" +
	"\x17MessageType_NostrPubkey\x10\xd2\x0f\x1a\x04\x98\xb5\x18\x01\x12%\n" +
	"\x1aMessageType_NostrSignEvent\x10\xd3\x0f\x1a\x04\x90\xb5\x18\x01\x12*\n" +
	"\x1fMessageType_NostrEventSignature\x10\xd4\x0f\x1a\x04\x98\xb5\x18\x01\x12)\n" +
	"\x1eMessageType_BenchmarkListNames\x10\x8cG\x1a\x04\x80\xa6\x1d\x01\x12%\n" +
	"\x1aMessageType_BenchmarkNames\x10\x8dG\x1a\x04\x80\xa6\x1d\x01\x12#\n" +
	"\x18MessageType_BenchmarkRun\x10\x8eG\x1a\x04\x80\xa6\x1d\x01\x12&\n" +
	"\x1bMessageType_BenchmarkResult\x10\x8fG\x1a\x04\x80\xa6\x1d\x01\x1a\x04\xc8\xf3\x18\x01\"\x04\bZ\x10\\\"\x04\bG\x10J\"\x04\br\x10z\"\x06\b\xdb\x01\x10\xdb\x01\"\x06\b\xe0\x01\x10\xe0\x01\"\x06\b\xac\x02\x10\xb0\x02\"\x06\b\xb5\x02\x10\xb8\x02\"\x06\b\xbc\x05\x10\xc5\x05\"\x06\b\xe9\a\x10\xed\a\"\x06\b\xf6\a\x10\xf7\a\"\x06\b\xfd\a\x10\xff\a\"\x06\b\x82\b\x10\x87\bBs\x80\xa6\x1d\x01\n" +
	"#com.satoshilabs.trezor.lib.protobufB\rTrezorMessageZ9github.com/ethereum/go-ethereum/accounts/usbwallet/trezor"

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData []byte
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_messages_proto_rawDesc), len(file_messages_proto_rawDesc)))
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_messages_proto_goTypes = []any{
	(MessageType)(0), // 0: hw.trezor.messages.MessageType
}
var file_messages_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	file_options_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_messages_proto_rawDesc), len(file_messages_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
