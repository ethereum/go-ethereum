// This file originates from the SatoshiLabs Trezor `common` repository at:
//   https://github.com/trezor/trezor-common/blob/master/protob/messages-common.proto
// dated 30.06.2025, commit 421b45d4677f2499234692b0f54010bc45b3ae5f.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: messages-common.proto

package trezor

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Failure_FailureType int32

const (
	Failure_Failure_UnexpectedMessage     Failure_FailureType = 1
	Failure_Failure_ButtonExpected        Failure_FailureType = 2
	Failure_Failure_DataError             Failure_FailureType = 3
	Failure_Failure_ActionCancelled       Failure_FailureType = 4
	Failure_Failure_PinExpected           Failure_FailureType = 5
	Failure_Failure_PinCancelled          Failure_FailureType = 6
	Failure_Failure_PinInvalid            Failure_FailureType = 7
	Failure_Failure_InvalidSignature      Failure_FailureType = 8
	Failure_Failure_ProcessError          Failure_FailureType = 9
	Failure_Failure_NotEnoughFunds        Failure_FailureType = 10
	Failure_Failure_NotInitialized        Failure_FailureType = 11
	Failure_Failure_PinMismatch           Failure_FailureType = 12
	Failure_Failure_WipeCodeMismatch      Failure_FailureType = 13
	Failure_Failure_InvalidSession        Failure_FailureType = 14
	Failure_Failure_Busy                  Failure_FailureType = 15
	Failure_Failure_ThpUnallocatedSession Failure_FailureType = 16
	Failure_Failure_InvalidProtocol       Failure_FailureType = 17
	Failure_Failure_BufferError           Failure_FailureType = 18
	Failure_Failure_FirmwareError         Failure_FailureType = 99
)

// Enum value maps for Failure_FailureType.
var (
	Failure_FailureType_name = map[int32]string{
		1:  "Failure_UnexpectedMessage",
		2:  "Failure_ButtonExpected",
		3:  "Failure_DataError",
		4:  "Failure_ActionCancelled",
		5:  "Failure_PinExpected",
		6:  "Failure_PinCancelled",
		7:  "Failure_PinInvalid",
		8:  "Failure_InvalidSignature",
		9:  "Failure_ProcessError",
		10: "Failure_NotEnoughFunds",
		11: "Failure_NotInitialized",
		12: "Failure_PinMismatch",
		13: "Failure_WipeCodeMismatch",
		14: "Failure_InvalidSession",
		15: "Failure_Busy",
		16: "Failure_ThpUnallocatedSession",
		17: "Failure_InvalidProtocol",
		18: "Failure_BufferError",
		99: "Failure_FirmwareError",
	}
	Failure_FailureType_value = map[string]int32{
		"Failure_UnexpectedMessage":     1,
		"Failure_ButtonExpected":        2,
		"Failure_DataError":             3,
		"Failure_ActionCancelled":       4,
		"Failure_PinExpected":           5,
		"Failure_PinCancelled":          6,
		"Failure_PinInvalid":            7,
		"Failure_InvalidSignature":      8,
		"Failure_ProcessError":          9,
		"Failure_NotEnoughFunds":        10,
		"Failure_NotInitialized":        11,
		"Failure_PinMismatch":           12,
		"Failure_WipeCodeMismatch":      13,
		"Failure_InvalidSession":        14,
		"Failure_Busy":                  15,
		"Failure_ThpUnallocatedSession": 16,
		"Failure_InvalidProtocol":       17,
		"Failure_BufferError":           18,
		"Failure_FirmwareError":         99,
	}
)

func (x Failure_FailureType) Enum() *Failure_FailureType {
	p := new(Failure_FailureType)
	*p = x
	return p
}

func (x Failure_FailureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Failure_FailureType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_common_proto_enumTypes[0].Descriptor()
}

func (Failure_FailureType) Type() protoreflect.EnumType {
	return &file_messages_common_proto_enumTypes[0]
}

func (x Failure_FailureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Failure_FailureType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Failure_FailureType(num)
	return nil
}

// Deprecated: Use Failure_FailureType.Descriptor instead.
func (Failure_FailureType) EnumDescriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{1, 0}
}

// *
// Type of button request
type ButtonRequest_ButtonRequestType int32

const (
	ButtonRequest_ButtonRequest_Other             ButtonRequest_ButtonRequestType = 1
	ButtonRequest_ButtonRequest_FeeOverThreshold  ButtonRequest_ButtonRequestType = 2
	ButtonRequest_ButtonRequest_ConfirmOutput     ButtonRequest_ButtonRequestType = 3
	ButtonRequest_ButtonRequest_ResetDevice       ButtonRequest_ButtonRequestType = 4
	ButtonRequest_ButtonRequest_ConfirmWord       ButtonRequest_ButtonRequestType = 5
	ButtonRequest_ButtonRequest_WipeDevice        ButtonRequest_ButtonRequestType = 6
	ButtonRequest_ButtonRequest_ProtectCall       ButtonRequest_ButtonRequestType = 7
	ButtonRequest_ButtonRequest_SignTx            ButtonRequest_ButtonRequestType = 8
	ButtonRequest_ButtonRequest_FirmwareCheck     ButtonRequest_ButtonRequestType = 9
	ButtonRequest_ButtonRequest_Address           ButtonRequest_ButtonRequestType = 10
	ButtonRequest_ButtonRequest_PublicKey         ButtonRequest_ButtonRequestType = 11
	ButtonRequest_ButtonRequest_MnemonicWordCount ButtonRequest_ButtonRequestType = 12
	ButtonRequest_ButtonRequest_MnemonicInput     ButtonRequest_ButtonRequestType = 13
	// Deprecated: Marked as deprecated in messages-common.proto.
	ButtonRequest__Deprecated_ButtonRequest_PassphraseType ButtonRequest_ButtonRequestType = 14
	ButtonRequest_ButtonRequest_UnknownDerivationPath      ButtonRequest_ButtonRequestType = 15
	ButtonRequest_ButtonRequest_RecoveryHomepage           ButtonRequest_ButtonRequestType = 16
	ButtonRequest_ButtonRequest_Success                    ButtonRequest_ButtonRequestType = 17
	ButtonRequest_ButtonRequest_Warning                    ButtonRequest_ButtonRequestType = 18
	ButtonRequest_ButtonRequest_PassphraseEntry            ButtonRequest_ButtonRequestType = 19
	ButtonRequest_ButtonRequest_PinEntry                   ButtonRequest_ButtonRequestType = 20
)

// Enum value maps for ButtonRequest_ButtonRequestType.
var (
	ButtonRequest_ButtonRequestType_name = map[int32]string{
		1:  "ButtonRequest_Other",
		2:  "ButtonRequest_FeeOverThreshold",
		3:  "ButtonRequest_ConfirmOutput",
		4:  "ButtonRequest_ResetDevice",
		5:  "ButtonRequest_ConfirmWord",
		6:  "ButtonRequest_WipeDevice",
		7:  "ButtonRequest_ProtectCall",
		8:  "ButtonRequest_SignTx",
		9:  "ButtonRequest_FirmwareCheck",
		10: "ButtonRequest_Address",
		11: "ButtonRequest_PublicKey",
		12: "ButtonRequest_MnemonicWordCount",
		13: "ButtonRequest_MnemonicInput",
		14: "_Deprecated_ButtonRequest_PassphraseType",
		15: "ButtonRequest_UnknownDerivationPath",
		16: "ButtonRequest_RecoveryHomepage",
		17: "ButtonRequest_Success",
		18: "ButtonRequest_Warning",
		19: "ButtonRequest_PassphraseEntry",
		20: "ButtonRequest_PinEntry",
	}
	ButtonRequest_ButtonRequestType_value = map[string]int32{
		"ButtonRequest_Other":                      1,
		"ButtonRequest_FeeOverThreshold":           2,
		"ButtonRequest_ConfirmOutput":              3,
		"ButtonRequest_ResetDevice":                4,
		"ButtonRequest_ConfirmWord":                5,
		"ButtonRequest_WipeDevice":                 6,
		"ButtonRequest_ProtectCall":                7,
		"ButtonRequest_SignTx":                     8,
		"ButtonRequest_FirmwareCheck":              9,
		"ButtonRequest_Address":                    10,
		"ButtonRequest_PublicKey":                  11,
		"ButtonRequest_MnemonicWordCount":          12,
		"ButtonRequest_MnemonicInput":              13,
		"_Deprecated_ButtonRequest_PassphraseType": 14,
		"ButtonRequest_UnknownDerivationPath":      15,
		"ButtonRequest_RecoveryHomepage":           16,
		"ButtonRequest_Success":                    17,
		"ButtonRequest_Warning":                    18,
		"ButtonRequest_PassphraseEntry":            19,
		"ButtonRequest_PinEntry":                   20,
	}
)

func (x ButtonRequest_ButtonRequestType) Enum() *ButtonRequest_ButtonRequestType {
	p := new(ButtonRequest_ButtonRequestType)
	*p = x
	return p
}

func (x ButtonRequest_ButtonRequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ButtonRequest_ButtonRequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_common_proto_enumTypes[1].Descriptor()
}

func (ButtonRequest_ButtonRequestType) Type() protoreflect.EnumType {
	return &file_messages_common_proto_enumTypes[1]
}

func (x ButtonRequest_ButtonRequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ButtonRequest_ButtonRequestType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ButtonRequest_ButtonRequestType(num)
	return nil
}

// Deprecated: Use ButtonRequest_ButtonRequestType.Descriptor instead.
func (ButtonRequest_ButtonRequestType) EnumDescriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{2, 0}
}

// *
// Type of PIN request
type PinMatrixRequest_PinMatrixRequestType int32

const (
	PinMatrixRequest_PinMatrixRequestType_Current        PinMatrixRequest_PinMatrixRequestType = 1
	PinMatrixRequest_PinMatrixRequestType_NewFirst       PinMatrixRequest_PinMatrixRequestType = 2
	PinMatrixRequest_PinMatrixRequestType_NewSecond      PinMatrixRequest_PinMatrixRequestType = 3
	PinMatrixRequest_PinMatrixRequestType_WipeCodeFirst  PinMatrixRequest_PinMatrixRequestType = 4
	PinMatrixRequest_PinMatrixRequestType_WipeCodeSecond PinMatrixRequest_PinMatrixRequestType = 5
)

// Enum value maps for PinMatrixRequest_PinMatrixRequestType.
var (
	PinMatrixRequest_PinMatrixRequestType_name = map[int32]string{
		1: "PinMatrixRequestType_Current",
		2: "PinMatrixRequestType_NewFirst",
		3: "PinMatrixRequestType_NewSecond",
		4: "PinMatrixRequestType_WipeCodeFirst",
		5: "PinMatrixRequestType_WipeCodeSecond",
	}
	PinMatrixRequest_PinMatrixRequestType_value = map[string]int32{
		"PinMatrixRequestType_Current":        1,
		"PinMatrixRequestType_NewFirst":       2,
		"PinMatrixRequestType_NewSecond":      3,
		"PinMatrixRequestType_WipeCodeFirst":  4,
		"PinMatrixRequestType_WipeCodeSecond": 5,
	}
)

func (x PinMatrixRequest_PinMatrixRequestType) Enum() *PinMatrixRequest_PinMatrixRequestType {
	p := new(PinMatrixRequest_PinMatrixRequestType)
	*p = x
	return p
}

func (x PinMatrixRequest_PinMatrixRequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PinMatrixRequest_PinMatrixRequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_common_proto_enumTypes[2].Descriptor()
}

func (PinMatrixRequest_PinMatrixRequestType) Type() protoreflect.EnumType {
	return &file_messages_common_proto_enumTypes[2]
}

func (x PinMatrixRequest_PinMatrixRequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PinMatrixRequest_PinMatrixRequestType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PinMatrixRequest_PinMatrixRequestType(num)
	return nil
}

// Deprecated: Use PinMatrixRequest_PinMatrixRequestType.Descriptor instead.
func (PinMatrixRequest_PinMatrixRequestType) EnumDescriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{4, 0}
}

// *
// Response: Success of the previous request
// @end
type Success struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *string                `protobuf:"bytes,1,opt,name=message,def=" json:"message,omitempty"` // human readable description of action or request-specific payload
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for Success fields.
const (
	Default_Success_Message = string("")
)

func (x *Success) Reset() {
	*x = Success{}
	mi := &file_messages_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_messages_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{0}
}

func (x *Success) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_Success_Message
}

// *
// Response: Failure of the previous request
// @end
type Failure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          *Failure_FailureType   `protobuf:"varint,1,opt,name=code,enum=hw.trezor.messages.common.Failure_FailureType" json:"code,omitempty"` // computer-readable definition of the error state
	Message       *string                `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`                                               // human-readable message of the error state
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Failure) Reset() {
	*x = Failure{}
	mi := &file_messages_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Failure) ProtoMessage() {}

func (x *Failure) ProtoReflect() protoreflect.Message {
	mi := &file_messages_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Failure.ProtoReflect.Descriptor instead.
func (*Failure) Descriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{1}
}

func (x *Failure) GetCode() Failure_FailureType {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return Failure_Failure_UnexpectedMessage
}

func (x *Failure) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

// *
// Response: Device is waiting for HW button press.
// @auxstart
// @next ButtonAck
type ButtonRequest struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Code          *ButtonRequest_ButtonRequestType `protobuf:"varint,1,opt,name=code,enum=hw.trezor.messages.common.ButtonRequest_ButtonRequestType" json:"code,omitempty"` // enum identifier of the screen (deprecated)
	Pages         *uint32                          `protobuf:"varint,2,opt,name=pages" json:"pages,omitempty"`                                                              // if the screen is paginated, number of pages
	Name          *string                          `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`                                                                 // name of the screen
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ButtonRequest) Reset() {
	*x = ButtonRequest{}
	mi := &file_messages_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ButtonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ButtonRequest) ProtoMessage() {}

func (x *ButtonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ButtonRequest.ProtoReflect.Descriptor instead.
func (*ButtonRequest) Descriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{2}
}

func (x *ButtonRequest) GetCode() ButtonRequest_ButtonRequestType {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ButtonRequest_ButtonRequest_Other
}

func (x *ButtonRequest) GetPages() uint32 {
	if x != nil && x.Pages != nil {
		return *x.Pages
	}
	return 0
}

func (x *ButtonRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// *
// Request: Computer agrees to wait for HW button press
// @auxend
type ButtonAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ButtonAck) Reset() {
	*x = ButtonAck{}
	mi := &file_messages_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ButtonAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ButtonAck) ProtoMessage() {}

func (x *ButtonAck) ProtoReflect() protoreflect.Message {
	mi := &file_messages_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ButtonAck.ProtoReflect.Descriptor instead.
func (*ButtonAck) Descriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{3}
}

// *
// Response: Device is asking computer to show PIN matrix and awaits PIN encoded using this matrix scheme
// @auxstart
// @next PinMatrixAck
type PinMatrixRequest struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Type          *PinMatrixRequest_PinMatrixRequestType `protobuf:"varint,1,opt,name=type,enum=hw.trezor.messages.common.PinMatrixRequest_PinMatrixRequestType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PinMatrixRequest) Reset() {
	*x = PinMatrixRequest{}
	mi := &file_messages_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PinMatrixRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinMatrixRequest) ProtoMessage() {}

func (x *PinMatrixRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinMatrixRequest.ProtoReflect.Descriptor instead.
func (*PinMatrixRequest) Descriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{4}
}

func (x *PinMatrixRequest) GetType() PinMatrixRequest_PinMatrixRequestType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return PinMatrixRequest_PinMatrixRequestType_Current
}

// *
// Request: Computer responds with encoded PIN
// @auxend
type PinMatrixAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pin           *string                `protobuf:"bytes,1,req,name=pin" json:"pin,omitempty"` // matrix encoded PIN entered by user
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PinMatrixAck) Reset() {
	*x = PinMatrixAck{}
	mi := &file_messages_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PinMatrixAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinMatrixAck) ProtoMessage() {}

func (x *PinMatrixAck) ProtoReflect() protoreflect.Message {
	mi := &file_messages_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinMatrixAck.ProtoReflect.Descriptor instead.
func (*PinMatrixAck) Descriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{5}
}

func (x *PinMatrixAck) GetPin() string {
	if x != nil && x.Pin != nil {
		return *x.Pin
	}
	return ""
}

// *
// Response: Device awaits encryption passphrase
// @auxstart
// @next PassphraseAck
type PassphraseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in messages-common.proto.
	XOnDevice     *bool `protobuf:"varint,1,opt,name=_on_device,json=OnDevice" json:"_on_device,omitempty"` // <2.3.0
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PassphraseRequest) Reset() {
	*x = PassphraseRequest{}
	mi := &file_messages_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PassphraseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassphraseRequest) ProtoMessage() {}

func (x *PassphraseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassphraseRequest.ProtoReflect.Descriptor instead.
func (*PassphraseRequest) Descriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{6}
}

// Deprecated: Marked as deprecated in messages-common.proto.
func (x *PassphraseRequest) GetXOnDevice() bool {
	if x != nil && x.XOnDevice != nil {
		return *x.XOnDevice
	}
	return false
}

// *
// Request: Send passphrase back
// @auxend
type PassphraseAck struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Passphrase *string                `protobuf:"bytes,1,opt,name=passphrase" json:"passphrase,omitempty"`
	// Deprecated: Marked as deprecated in messages-common.proto.
	XState        []byte `protobuf:"bytes,2,opt,name=_state,json=State" json:"_state,omitempty"`           // <2.3.0
	OnDevice      *bool  `protobuf:"varint,3,opt,name=on_device,json=onDevice" json:"on_device,omitempty"` // user wants to enter passphrase on the device
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PassphraseAck) Reset() {
	*x = PassphraseAck{}
	mi := &file_messages_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PassphraseAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassphraseAck) ProtoMessage() {}

func (x *PassphraseAck) ProtoReflect() protoreflect.Message {
	mi := &file_messages_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassphraseAck.ProtoReflect.Descriptor instead.
func (*PassphraseAck) Descriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{7}
}

func (x *PassphraseAck) GetPassphrase() string {
	if x != nil && x.Passphrase != nil {
		return *x.Passphrase
	}
	return ""
}

// Deprecated: Marked as deprecated in messages-common.proto.
func (x *PassphraseAck) GetXState() []byte {
	if x != nil {
		return x.XState
	}
	return nil
}

func (x *PassphraseAck) GetOnDevice() bool {
	if x != nil && x.OnDevice != nil {
		return *x.OnDevice
	}
	return false
}

// *
// Response: Device awaits passphrase state
// Deprecated in 2.3.0
// @next Deprecated_PassphraseStateAck
//
// Deprecated: Marked as deprecated in messages-common.proto.
type Deprecated_PassphraseStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         []byte                 `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"` // actual device state
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Deprecated_PassphraseStateRequest) Reset() {
	*x = Deprecated_PassphraseStateRequest{}
	mi := &file_messages_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Deprecated_PassphraseStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deprecated_PassphraseStateRequest) ProtoMessage() {}

func (x *Deprecated_PassphraseStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deprecated_PassphraseStateRequest.ProtoReflect.Descriptor instead.
func (*Deprecated_PassphraseStateRequest) Descriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{8}
}

func (x *Deprecated_PassphraseStateRequest) GetState() []byte {
	if x != nil {
		return x.State
	}
	return nil
}

// *
// Request: Send passphrase state back
// Deprecated in 2.3.0
// @auxend
//
// Deprecated: Marked as deprecated in messages-common.proto.
type Deprecated_PassphraseStateAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Deprecated_PassphraseStateAck) Reset() {
	*x = Deprecated_PassphraseStateAck{}
	mi := &file_messages_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Deprecated_PassphraseStateAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deprecated_PassphraseStateAck) ProtoMessage() {}

func (x *Deprecated_PassphraseStateAck) ProtoReflect() protoreflect.Message {
	mi := &file_messages_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deprecated_PassphraseStateAck.ProtoReflect.Descriptor instead.
func (*Deprecated_PassphraseStateAck) Descriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{9}
}

// *
// Structure representing BIP32 (hierarchical deterministic) node
// Used for imports of private key into the device and exporting public key out of device
// @embed
type HDNodeType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Depth         *uint32                `protobuf:"varint,1,req,name=depth" json:"depth,omitempty"`
	Fingerprint   *uint32                `protobuf:"varint,2,req,name=fingerprint" json:"fingerprint,omitempty"`
	ChildNum      *uint32                `protobuf:"varint,3,req,name=child_num,json=childNum" json:"child_num,omitempty"`
	ChainCode     []byte                 `protobuf:"bytes,4,req,name=chain_code,json=chainCode" json:"chain_code,omitempty"`
	PrivateKey    []byte                 `protobuf:"bytes,5,opt,name=private_key,json=privateKey" json:"private_key,omitempty"`
	PublicKey     []byte                 `protobuf:"bytes,6,req,name=public_key,json=publicKey" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HDNodeType) Reset() {
	*x = HDNodeType{}
	mi := &file_messages_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HDNodeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HDNodeType) ProtoMessage() {}

func (x *HDNodeType) ProtoReflect() protoreflect.Message {
	mi := &file_messages_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HDNodeType.ProtoReflect.Descriptor instead.
func (*HDNodeType) Descriptor() ([]byte, []int) {
	return file_messages_common_proto_rawDescGZIP(), []int{10}
}

func (x *HDNodeType) GetDepth() uint32 {
	if x != nil && x.Depth != nil {
		return *x.Depth
	}
	return 0
}

func (x *HDNodeType) GetFingerprint() uint32 {
	if x != nil && x.Fingerprint != nil {
		return *x.Fingerprint
	}
	return 0
}

func (x *HDNodeType) GetChildNum() uint32 {
	if x != nil && x.ChildNum != nil {
		return *x.ChildNum
	}
	return 0
}

func (x *HDNodeType) GetChainCode() []byte {
	if x != nil {
		return x.ChainCode
	}
	return nil
}

func (x *HDNodeType) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *HDNodeType) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

var File_messages_common_proto protoreflect.FileDescriptor

const file_messages_common_proto_rawDesc = "" +
	"\n" +
	"\x15messages-common.proto\x12\x19hw.trezor.messages.common\x1a\roptions.proto\"%\n" +
	"\aSuccess\x12\x1a\n" +
	"\amessage\x18\x01 \x01(\t:\x00R\amessage\"\xfa\x04\n" +
	"\aFailure\x12B\n" +
	"\x04code\x18\x01 \x01(\x0e2..hw.trezor.messages.common.Failure.FailureTypeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x90\x04\n" +
	"\vFailureType\x12\x1d\n" +
	"\x19Failure_UnexpectedMessage\x10\x01\x12\x1a\n" +
	"\x16Failure_ButtonExpected\x10\x02\x12\x15\n" +
	"\x11Failure_DataError\x10\x03\x12\x1b\n" +
	"\x17Failure_ActionCancelled\x10\x04\x12\x17\n" +
	"\x13Failure_PinExpected\x10\x05\x12\x18\n" +
	"\x14Failure_PinCancelled\x10\x06\x12\x16\n" +
	"\x12Failure_PinInvalid\x10\a\x12\x1c\n" +
	"\x18Failure_InvalidSignature\x10\b\x12\x18\n" +
	"\x14Failure_ProcessError\x10\t\x12\x1a\n" +
	"\x16Failure_NotEnoughFunds\x10\n" +
	"\x12\x1a\n" +
	"\x16Failure_NotInitialized\x10\v\x12\x17\n" +
	"\x13Failure_PinMismatch\x10\f\x12\x1c\n" +
	"\x18Failure_WipeCodeMismatch\x10\r\x12\x1a\n" +
	"\x16Failure_InvalidSession\x10\x0e\x12\x10\n" +
	"\fFailure_Busy\x10\x0f\x12!\n" +
	"\x1dFailure_ThpUnallocatedSession\x10\x10\x12\x1b\n" +
	"\x17Failure_InvalidProtocol\x10\x11\x12\x17\n" +
	"\x13Failure_BufferError\x10\x12\x12\x19\n" +
	"\x15Failure_FirmwareError\x10c\"\xab\x06\n" +
	"\rButtonRequest\x12N\n" +
	"\x04code\x18\x01 \x01(\x0e2:.hw.trezor.messages.common.ButtonRequest.ButtonRequestTypeR\x04code\x12\x14\n" +
	"\x05pages\x18\x02 \x01(\rR\x05pages\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\x99\x05\n" +
	"\x11ButtonRequestType\x12\x17\n" +
	"\x13ButtonRequest_Other\x10\x01\x12\"\n" +
	"\x1eButtonRequest_FeeOverThreshold\x10\x02\x12\x1f\n" +
	"\x1bButtonRequest_ConfirmOutput\x10\x03\x12\x1d\n" +
	"\x19ButtonRequest_ResetDevice\x10\x04\x12\x1d\n" +
	"\x19ButtonRequest_ConfirmWord\x10\x05\x12\x1c\n" +
	"\x18ButtonRequest_WipeDevice\x10\x06\x12\x1d\n" +
	"\x19ButtonRequest_ProtectCall\x10\a\x12\x18\n" +
	"\x14ButtonRequest_SignTx\x10\b\x12\x1f\n" +
	"\x1bButtonRequest_FirmwareCheck\x10\t\x12\x19\n" +
	"\x15ButtonRequest_Address\x10\n" +
	"\x12\x1b\n" +
	"\x17ButtonRequest_PublicKey\x10\v\x12#\n" +
	"\x1fButtonRequest_MnemonicWordCount\x10\f\x12\x1f\n" +
	"\x1bButtonRequest_MnemonicInput\x10\r\x120\n" +
	"(_Deprecated_ButtonRequest_PassphraseType\x10\x0e\x1a\x02\b\x01\x12'\n" +
	"#ButtonRequest_UnknownDerivationPath\x10\x0f\x12\"\n" +
	"\x1eButtonRequest_RecoveryHomepage\x10\x10\x12\x19\n" +
	"\x15ButtonRequest_Success\x10\x11\x12\x19\n" +
	"\x15ButtonRequest_Warning\x10\x12\x12!\n" +
	"\x1dButtonRequest_PassphraseEntry\x10\x13\x12\x1a\n" +
	"\x16ButtonRequest_PinEntry\x10\x14J\x04\b\x03\x10\x04\"\v\n" +
	"\tButtonAck\"\xbb\x02\n" +
	"\x10PinMatrixRequest\x12T\n" +
	"\x04type\x18\x01 \x01(\x0e2@.hw.trezor.messages.common.PinMatrixRequest.PinMatrixRequestTypeR\x04type\"\xd0\x01\n" +
	"\x14PinMatrixRequestType\x12 \n" +
	"\x1cPinMatrixRequestType_Current\x10\x01\x12!\n" +
	"\x1dPinMatrixRequestType_NewFirst\x10\x02\x12\"\n" +
	"\x1ePinMatrixRequestType_NewSecond\x10\x03\x12&\n" +
	"\"PinMatrixRequestType_WipeCodeFirst\x10\x04\x12'\n" +
	"#PinMatrixRequestType_WipeCodeSecond\x10\x05\" \n" +
	"\fPinMatrixAck\x12\x10\n" +
	"\x03pin\x18\x01 \x02(\tR\x03pin\"5\n" +
	"\x11PassphraseRequest\x12 \n" +
	"\n" +
	"_on_device\x18\x01 \x01(\bB\x02\x18\x01R\bOnDevice\"g\n" +
	"\rPassphraseAck\x12\x1e\n" +
	"\n" +
	"passphrase\x18\x01 \x01(\tR\n" +
	"passphrase\x12\x19\n" +
	"\x06_state\x18\x02 \x01(\fB\x02\x18\x01R\x05State\x12\x1b\n" +
	"\ton_device\x18\x03 \x01(\bR\bonDevice\"=\n" +
	"!Deprecated_PassphraseStateRequest\x12\x14\n" +
	"\x05state\x18\x01 \x01(\fR\x05state:\x02\x18\x01\"#\n" +
	"\x1dDeprecated_PassphraseStateAck:\x02\x18\x01\"\xc0\x01\n" +
	"\n" +
	"HDNodeType\x12\x14\n" +
	"\x05depth\x18\x01 \x02(\rR\x05depth\x12 \n" +
	"\vfingerprint\x18\x02 \x02(\rR\vfingerprint\x12\x1b\n" +
	"\tchild_num\x18\x03 \x02(\rR\bchildNum\x12\x1d\n" +
	"\n" +
	"chain_code\x18\x04 \x02(\fR\tchainCode\x12\x1f\n" +
	"\vprivate_key\x18\x05 \x01(\fR\n" +
	"privateKey\x12\x1d\n" +
	"\n" +
	"public_key\x18\x06 \x02(\fR\tpublicKeyBy\x80\xa6\x1d\x01\n" +
	"#com.satoshilabs.trezor.lib.protobufB\x13TrezorMessageCommonZ9github.com/ethereum/go-ethereum/accounts/usbwallet/trezor"

var (
	file_messages_common_proto_rawDescOnce sync.Once
	file_messages_common_proto_rawDescData []byte
)

func file_messages_common_proto_rawDescGZIP() []byte {
	file_messages_common_proto_rawDescOnce.Do(func() {
		file_messages_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_messages_common_proto_rawDesc), len(file_messages_common_proto_rawDesc)))
	})
	return file_messages_common_proto_rawDescData
}

var file_messages_common_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_messages_common_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_messages_common_proto_goTypes = []any{
	(Failure_FailureType)(0),                   // 0: hw.trezor.messages.common.Failure.FailureType
	(ButtonRequest_ButtonRequestType)(0),       // 1: hw.trezor.messages.common.ButtonRequest.ButtonRequestType
	(PinMatrixRequest_PinMatrixRequestType)(0), // 2: hw.trezor.messages.common.PinMatrixRequest.PinMatrixRequestType
	(*Success)(nil),                            // 3: hw.trezor.messages.common.Success
	(*Failure)(nil),                            // 4: hw.trezor.messages.common.Failure
	(*ButtonRequest)(nil),                      // 5: hw.trezor.messages.common.ButtonRequest
	(*ButtonAck)(nil),                          // 6: hw.trezor.messages.common.ButtonAck
	(*PinMatrixRequest)(nil),                   // 7: hw.trezor.messages.common.PinMatrixRequest
	(*PinMatrixAck)(nil),                       // 8: hw.trezor.messages.common.PinMatrixAck
	(*PassphraseRequest)(nil),                  // 9: hw.trezor.messages.common.PassphraseRequest
	(*PassphraseAck)(nil),                      // 10: hw.trezor.messages.common.PassphraseAck
	(*Deprecated_PassphraseStateRequest)(nil),  // 11: hw.trezor.messages.common.Deprecated_PassphraseStateRequest
	(*Deprecated_PassphraseStateAck)(nil),      // 12: hw.trezor.messages.common.Deprecated_PassphraseStateAck
	(*HDNodeType)(nil),                         // 13: hw.trezor.messages.common.HDNodeType
}
var file_messages_common_proto_depIdxs = []int32{
	0, // 0: hw.trezor.messages.common.Failure.code:type_name -> hw.trezor.messages.common.Failure.FailureType
	1, // 1: hw.trezor.messages.common.ButtonRequest.code:type_name -> hw.trezor.messages.common.ButtonRequest.ButtonRequestType
	2, // 2: hw.trezor.messages.common.PinMatrixRequest.type:type_name -> hw.trezor.messages.common.PinMatrixRequest.PinMatrixRequestType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_messages_common_proto_init() }
func file_messages_common_proto_init() {
	if File_messages_common_proto != nil {
		return
	}
	file_options_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_messages_common_proto_rawDesc), len(file_messages_common_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_common_proto_goTypes,
		DependencyIndexes: file_messages_common_proto_depIdxs,
		EnumInfos:         file_messages_common_proto_enumTypes,
		MessageInfos:      file_messages_common_proto_msgTypes,
	}.Build()
	File_messages_common_proto = out.File
	file_messages_common_proto_goTypes = nil
	file_messages_common_proto_depIdxs = nil
}
